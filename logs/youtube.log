2025-08-19 12:31:21,959 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:31:22,059 - __streamlit_app__ - INFO - Chargement du modèle d'embedding...
2025-08-19 12:31:22,059 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 12:31:29,371 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 12:31:29,371 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 12:31:34,829 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 12:31:34,830 - __streamlit_app__ - INFO - Modèle d'embedding chargé avec succès
2025-08-19 12:31:35,213 - __streamlit_app__ - INFO - Initialisation du client Qdrant...
2025-08-19 12:31:36,042 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 12:31:36,425 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 12:31:36,437 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 12:31:36,437 - __streamlit_app__ - INFO - Client Qdrant initialisé
2025-08-19 12:31:36,441 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:31:36,446 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:32:14,142 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:32:14,163 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:32:14,175 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 12:32:14,178 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 12:32:14,178 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo WMeOZAHusGQ dans Qdrant...
2025-08-19 12:32:14,588 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:32:14,598 - __streamlit_app__ - INFO - Vidéo WMeOZAHusGQ non trouvée, démarrage de l'ingestion...
2025-08-19 12:32:14,599 - __streamlit_app__ - INFO - Récupération de la transcription pour WMeOZAHusGQ
2025-08-19 12:32:16,214 - __streamlit_app__ - INFO - Transcription récupérée (180 segments)
2025-08-19 12:32:16,216 - __streamlit_app__ - INFO - Sauvegarde de la transcription pour WMeOZAHusGQ
2025-08-19 12:32:16,217 - __streamlit_app__ - INFO - Traitement et stockage de WMeOZAHusGQ dans Qdrant
2025-08-19 12:32:16,217 - __embedding__ - INFO - Starting processing for TXT file: ./downloads/WMeOZAHusGQ.txt
2025-08-19 12:32:16,218 - __embedding__ - ERROR - File not found: ./downloads/WMeOZAHusGQ.txt
2025-08-19 12:32:16,218 - __streamlit_app__ - INFO - Vidéo WMeOZAHusGQ traitée et stockée avec succès
2025-08-19 12:32:16,220 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:32:26,041 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:32:26,051 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:32:26,054 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 12:32:26,055 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 12:32:26,055 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo WMeOZAHusGQ dans Qdrant...
2025-08-19 12:32:26,440 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:32:26,443 - __streamlit_app__ - INFO - Vidéo WMeOZAHusGQ non trouvée, démarrage de l'ingestion...
2025-08-19 12:32:26,445 - __streamlit_app__ - INFO - Récupération de la transcription pour WMeOZAHusGQ
2025-08-19 12:32:27,685 - __streamlit_app__ - INFO - Transcription récupérée (180 segments)
2025-08-19 12:32:27,687 - __streamlit_app__ - INFO - Sauvegarde de la transcription pour WMeOZAHusGQ
2025-08-19 12:32:27,688 - __streamlit_app__ - INFO - Traitement et stockage de WMeOZAHusGQ dans Qdrant
2025-08-19 12:32:27,689 - __embedding__ - INFO - Starting processing for TXT file: ./downloads/WMeOZAHusGQ.txt
2025-08-19 12:32:27,689 - __embedding__ - ERROR - File not found: ./downloads/WMeOZAHusGQ.txt
2025-08-19 12:32:27,689 - __streamlit_app__ - INFO - Vidéo WMeOZAHusGQ traitée et stockée avec succès
2025-08-19 12:32:27,691 - __streamlit_app__ - INFO - Question utilisateur: De quoi parle la vidéo ?
2025-08-19 12:32:27,693 - __streamlit_app__ - INFO - Recherche de chunks pertinents pour: De quoi parle la vidéo ?
2025-08-19 12:32:27,694 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-19 12:32:27,694 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 12:32:27,703 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 12:32:27,703 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 12:32:33,085 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 12:32:34,790 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 12:32:35,195 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 12:32:35,202 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 12:32:35,202 - __retrieve__ - INFO - Application du filtre pour la vidéo : WMeOZAHusGQ
2025-08-19 12:32:35,202 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-19 12:32:35,453 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-19 12:32:35,458 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-19 12:32:35,459 - __streamlit_app__ - INFO - Trouvé 0 chunks pertinents
2025-08-19 12:32:35,463 - __streamlit_app__ - INFO - Aucun chunk pertinent trouvé pour la requête
2025-08-19 12:32:36,282 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:36:40,236 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:36:40,253 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:36:40,256 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:36:40,257 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:36:40,258 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo QSFq8S_Ui5g dans Qdrant...
2025-08-19 12:36:40,661 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:36:40,667 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g non trouvée, démarrage de l'ingestion...
2025-08-19 12:36:40,668 - __streamlit_app__ - INFO - Récupération de la transcription pour QSFq8S_Ui5g
2025-08-19 12:36:42,337 - __streamlit_app__ - INFO - Transcription récupérée (3281 segments)
2025-08-19 12:36:42,338 - __streamlit_app__ - INFO - Sauvegarde de la transcription pour QSFq8S_Ui5g
2025-08-19 12:36:42,339 - __streamlit_app__ - INFO - Traitement et stockage de QSFq8S_Ui5g dans Qdrant
2025-08-19 12:36:42,340 - __embedding__ - INFO - Starting processing for TXT file: ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:36:42,340 - __embedding__ - ERROR - File not found: ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:36:42,340 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g traitée et stockée avec succès
2025-08-19 12:36:42,344 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:36:46,192 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:36:46,196 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:36:46,198 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:36:46,199 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:36:46,199 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo QSFq8S_Ui5g dans Qdrant...
2025-08-19 12:36:46,578 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:36:46,579 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g non trouvée, démarrage de l'ingestion...
2025-08-19 12:36:46,580 - __streamlit_app__ - INFO - Récupération de la transcription pour QSFq8S_Ui5g
2025-08-19 12:36:48,293 - __streamlit_app__ - INFO - Transcription récupérée (3281 segments)
2025-08-19 12:36:48,294 - __streamlit_app__ - INFO - Sauvegarde de la transcription pour QSFq8S_Ui5g
2025-08-19 12:36:48,294 - __streamlit_app__ - INFO - Traitement et stockage de QSFq8S_Ui5g dans Qdrant
2025-08-19 12:36:48,294 - __embedding__ - INFO - Starting processing for TXT file: ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:36:48,295 - __embedding__ - ERROR - File not found: ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:36:48,295 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g traitée et stockée avec succès
2025-08-19 12:36:48,299 - __streamlit_app__ - INFO - Réinitialisation de la conversation demandée
2025-08-19 12:36:48,505 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:36:48,506 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:36:48,507 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:36:48,507 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:36:48,507 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo QSFq8S_Ui5g dans Qdrant...
2025-08-19 12:36:48,635 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:36:48,640 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g non trouvée, démarrage de l'ingestion...
2025-08-19 12:36:48,640 - __streamlit_app__ - INFO - Récupération de la transcription pour QSFq8S_Ui5g
2025-08-19 12:36:50,473 - __streamlit_app__ - INFO - Transcription récupérée (3281 segments)
2025-08-19 12:36:50,474 - __streamlit_app__ - INFO - Sauvegarde de la transcription pour QSFq8S_Ui5g
2025-08-19 12:36:50,475 - __streamlit_app__ - INFO - Traitement et stockage de QSFq8S_Ui5g dans Qdrant
2025-08-19 12:36:50,475 - __embedding__ - INFO - Starting processing for TXT file: ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:36:50,475 - __embedding__ - ERROR - File not found: ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:36:50,475 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g traitée et stockée avec succès
2025-08-19 12:36:50,477 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:37:00,512 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:37:00,521 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:37:00,523 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:37:00,524 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:37:00,524 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo QSFq8S_Ui5g dans Qdrant...
2025-08-19 12:37:00,913 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:37:00,915 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g non trouvée, démarrage de l'ingestion...
2025-08-19 12:37:00,918 - __streamlit_app__ - INFO - Récupération de la transcription pour QSFq8S_Ui5g
2025-08-19 12:37:02,941 - __streamlit_app__ - INFO - Transcription récupérée (3281 segments)
2025-08-19 12:37:02,942 - __streamlit_app__ - INFO - Sauvegarde de la transcription pour QSFq8S_Ui5g
2025-08-19 12:37:02,943 - __streamlit_app__ - INFO - Traitement et stockage de QSFq8S_Ui5g dans Qdrant
2025-08-19 12:37:02,943 - __embedding__ - INFO - Starting processing for TXT file: ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:37:02,944 - __embedding__ - ERROR - File not found: ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:37:02,944 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g traitée et stockée avec succès
2025-08-19 12:37:02,945 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:37:06,194 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:37:06,195 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:37:06,196 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:37:08,969 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:37:08,975 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:37:08,978 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:37:08,979 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:37:08,980 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo QSFq8S_Ui5g dans Qdrant...
2025-08-19 12:37:09,355 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:37:09,357 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g non trouvée, démarrage de l'ingestion...
2025-08-19 12:37:09,359 - __streamlit_app__ - INFO - Récupération de la transcription pour QSFq8S_Ui5g
2025-08-19 12:37:11,146 - __streamlit_app__ - INFO - Transcription récupérée (3281 segments)
2025-08-19 12:37:11,147 - __streamlit_app__ - INFO - Sauvegarde de la transcription pour QSFq8S_Ui5g
2025-08-19 12:37:11,148 - __streamlit_app__ - INFO - Traitement et stockage de QSFq8S_Ui5g dans Qdrant
2025-08-19 12:37:11,148 - __embedding__ - INFO - Starting processing for TXT file: ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:37:11,148 - __embedding__ - ERROR - File not found: ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:37:11,148 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g traitée et stockée avec succès
2025-08-19 12:37:11,150 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:37:19,179 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:37:19,187 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:37:19,190 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:37:19,191 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:37:19,191 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo QSFq8S_Ui5g dans Qdrant...
2025-08-19 12:37:19,585 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:37:19,590 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g non trouvée, démarrage de l'ingestion...
2025-08-19 12:37:19,592 - __streamlit_app__ - INFO - Récupération de la transcription pour QSFq8S_Ui5g
2025-08-19 12:37:21,375 - __streamlit_app__ - INFO - Transcription récupérée (3281 segments)
2025-08-19 12:37:21,376 - __streamlit_app__ - INFO - Sauvegarde de la transcription pour QSFq8S_Ui5g
2025-08-19 12:37:21,378 - __streamlit_app__ - INFO - Traitement et stockage de QSFq8S_Ui5g dans Qdrant
2025-08-19 12:37:21,378 - __embedding__ - INFO - Starting processing for TXT file: ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:37:21,378 - __embedding__ - ERROR - File not found: ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:37:21,378 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g traitée et stockée avec succès
2025-08-19 12:37:21,380 - __streamlit_app__ - INFO - Question utilisateur: De quoi parle la vidéo ?
2025-08-19 12:37:21,382 - __streamlit_app__ - INFO - Recherche de chunks pertinents pour: De quoi parle la vidéo ?
2025-08-19 12:37:21,382 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-19 12:37:21,382 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 12:37:21,389 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 12:37:21,389 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 12:37:27,091 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 12:37:27,777 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 12:37:28,155 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 12:37:28,157 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 12:37:28,158 - __retrieve__ - INFO - Application du filtre pour la vidéo : QSFq8S_Ui5g
2025-08-19 12:37:28,158 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-19 12:37:28,403 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-19 12:37:28,407 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-19 12:37:28,408 - __streamlit_app__ - INFO - Trouvé 0 chunks pertinents
2025-08-19 12:37:28,411 - __streamlit_app__ - INFO - Aucun chunk pertinent trouvé pour la requête
2025-08-19 12:37:29,240 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:41:58,441 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:41:58,446 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:41:58,449 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:42:02,361 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:42:02,377 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:42:02,381 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:42:02,383 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:42:02,383 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo QSFq8S_Ui5g dans Qdrant...
2025-08-19 12:42:03,659 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:42:03,664 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g non trouvée, démarrage de l'ingestion...
2025-08-19 12:42:03,665 - __streamlit_app__ - INFO - Récupération de la transcription pour QSFq8S_Ui5g
2025-08-19 12:42:05,819 - __streamlit_app__ - INFO - Transcription récupérée (3281 segments)
2025-08-19 12:42:05,821 - __streamlit_app__ - INFO - Sauvegarde de la transcription pour QSFq8S_Ui5g
2025-08-19 12:42:05,821 - __youtube__ - INFO - Saving TXT to QSFq8S_Ui5g.txt
2025-08-19 12:42:05,823 - __youtube__ - INFO - Saved TXT to ../downloads/QSFq8S_Ui5g.txt
2025-08-19 12:42:05,823 - __streamlit_app__ - INFO - Transcription sauvegardée dans ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:42:05,823 - __streamlit_app__ - INFO - Traitement et stockage de QSFq8S_Ui5g dans Qdrant
2025-08-19 12:42:05,824 - __embedding__ - INFO - Starting processing for TXT file: ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:42:05,825 - __embedding__ - INFO - Loaded text from ./downloads/QSFq8S_Ui5g.txt, length: 124357 chars
2025-08-19 12:42:05,825 - __embedding__ - INFO - Splitting text into chunks (size=700, overlap=100)
2025-08-19 12:42:05,832 - __embedding__ - INFO - Text split into 205 chunks
2025-08-19 12:42:05,832 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 12:42:05,838 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 12:42:05,838 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 12:42:12,847 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 12:42:12,848 - __embedding__ - INFO - Embedding 205 text chunks
2025-08-19 12:42:19,200 - __embedding__ - INFO - Embedded 205 text chunks
2025-08-19 12:42:19,677 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 12:42:20,077 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 12:42:20,079 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 12:42:20,207 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 12:42:20,208 - __qdrant__ - INFO - Collection 'youtube_transcripts' already exists.
2025-08-19 12:42:20,208 - __qdrant__ - INFO - Upserting 205 points into collection 'youtube_transcripts'
2025-08-19 12:42:26,377 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points?wait=true "HTTP/1.1 200 OK"
2025-08-19 12:42:26,385 - __qdrant__ - INFO - Successfully upserted points into collection 'youtube_transcripts'
2025-08-19 12:42:26,385 - __embedding__ - INFO - Finished processing and storing 205 chunks from ./downloads/QSFq8S_Ui5g.txt
2025-08-19 12:42:26,390 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g traitée et stockée avec succès
2025-08-19 12:42:26,774 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:42:26,776 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g confirmée dans Qdrant
2025-08-19 12:42:26,787 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:42:37,480 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:42:37,494 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:42:37,505 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:42:37,507 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:42:37,508 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo QSFq8S_Ui5g dans Qdrant...
2025-08-19 12:42:37,905 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:42:37,908 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g déjà présente dans la base
2025-08-19 12:42:37,911 - __streamlit_app__ - INFO - Question utilisateur: De quoi parle la vidéo ?
2025-08-19 12:42:37,918 - __streamlit_app__ - INFO - Recherche de chunks pertinents pour: De quoi parle la vidéo ?
2025-08-19 12:42:37,919 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-19 12:42:37,920 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 12:42:37,926 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 12:42:37,926 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 12:42:42,780 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 12:42:43,301 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 12:42:43,676 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 12:42:43,678 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 12:42:43,678 - __retrieve__ - INFO - Application du filtre pour la vidéo : QSFq8S_Ui5g
2025-08-19 12:42:43,679 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-19 12:42:43,920 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-19 12:42:43,923 - __retrieve__ - INFO - Retrieved 5 relevant chunks.
2025-08-19 12:42:43,924 - __streamlit_app__ - INFO - Trouvé 5 chunks pertinents
2025-08-19 12:42:43,929 - __streamlit_app__ - INFO - Génération de réponse avec le modèle openai/gpt-oss-120b
2025-08-19 12:42:43,929 - __query__ - INFO - Construction du prompt pour la question: 'Contexte de la conversation:
user: De quoi parle la vidéo ?

Question actuelle: De quoi parle la vidéo ?'
2025-08-19 12:42:43,929 - __query__ - INFO - Appel à Groq pour générer la réponse...
2025-08-19 12:42:43,930 - __grok__ - INFO - Generating answer with Groq model 'openai/gpt-oss-120b'
2025-08-19 12:42:43,946 - __grok__ - INFO - Groq client created
2025-08-19 12:42:46,149 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-19 12:42:46,177 - __grok__ - INFO - Answer generated successfully.
2025-08-19 12:42:46,177 - __query__ - INFO - Réponse générée avec succès.
2025-08-19 12:42:46,177 - __streamlit_app__ - INFO - Réponse générée avec succès
2025-08-19 12:42:51,794 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:43:37,532 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:43:37,550 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:43:37,552 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:43:37,554 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:43:37,554 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo QSFq8S_Ui5g dans Qdrant...
2025-08-19 12:43:37,982 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:43:37,989 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g déjà présente dans la base
2025-08-19 12:43:37,994 - __streamlit_app__ - INFO - Question utilisateur: Bien. C'est quoi le format de fichier recommandé par la vidéo dans le cas d'un projet de data eng ?
2025-08-19 12:43:37,998 - __streamlit_app__ - INFO - Recherche de chunks pertinents pour: Bien. C'est quoi le format de fichier recommandé par la vidéo dans le cas d'un projet de data eng ?
2025-08-19 12:43:37,998 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'Bien. C'est quoi le format de fichier recommandé par la vidéo dans le cas d'un projet de data eng ?'
2025-08-19 12:43:37,998 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 12:43:38,009 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 12:43:38,009 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 12:43:42,617 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 12:43:44,412 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 12:43:44,798 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 12:43:44,799 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 12:43:44,799 - __retrieve__ - INFO - Application du filtre pour la vidéo : QSFq8S_Ui5g
2025-08-19 12:43:44,800 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-19 12:43:45,047 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-19 12:43:45,053 - __retrieve__ - INFO - Retrieved 5 relevant chunks.
2025-08-19 12:43:45,055 - __streamlit_app__ - INFO - Trouvé 5 chunks pertinents
2025-08-19 12:43:45,065 - __streamlit_app__ - INFO - Génération de réponse avec le modèle openai/gpt-oss-120b
2025-08-19 12:43:45,065 - __query__ - INFO - Construction du prompt pour la question: 'Contexte de la conversation:
user: De quoi parle la vidéo ?
assistant: La vidéo porte sur les notions de base du **big data** : les différents formats de fichiers (JSON, CSV, Avro, Parquet), les types de données (structurées, semi‑structurées, non structurées), le fonctionnement du calcul distribué et du stockage sur du matériel « commodity » en cluster. Elle explique ensuite les **stratégies d’ingestion de données** (chargement incrémentiel, chargement complet, chargement « absurde ») et montre comment mettre en œuvre un chargement incrémentiel avec **Apache Spark** depuis une base MySQL, en appliquant les logiques métier, de déduplication, de filtrage et de validation. Enfin, elle donne quelques conseils pour rédiger les descriptions de projets sur un CV.La vidéo porte sur les notions de base du **big data** : les différents formats de fichiers (JSON, CSV, Avro, Parquet), les types de données (structurées, semi‑structurées, non structurées), le fonctionnement du calcul distribué et du stockage sur du matériel « commodity » en cluster. Elle explique ensuite les **stratégies d’ingestion de données** (chargement incrémentiel, chargement complet, chargement « absurde ») et montre comment mettre en œuvre un chargement incrémentiel avec **Apache Spark** depuis une base MySQL, en appliquant les logiques métier, de déduplication, de filtrage et de validation. Enfin, elle donne quelques conseils pour rédiger les descriptions de projets sur un CV. 
user: Bien. C'est quoi le format de fichier recommandé par la vidéo dans le cas d'un projet de data eng ?

Question actuelle: Bien. C'est quoi le format de fichier recommandé par la vidéo dans le cas d'un projet de data eng ?'
2025-08-19 12:43:45,067 - __query__ - INFO - Appel à Groq pour générer la réponse...
2025-08-19 12:43:45,067 - __grok__ - INFO - Generating answer with Groq model 'openai/gpt-oss-120b'
2025-08-19 12:43:45,087 - __grok__ - INFO - Groq client created
2025-08-19 12:43:45,933 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-19 12:43:45,937 - __grok__ - INFO - Answer generated successfully.
2025-08-19 12:43:45,937 - __query__ - INFO - Réponse générée avec succès.
2025-08-19 12:43:45,938 - __streamlit_app__ - INFO - Réponse générée avec succès
2025-08-19 12:43:46,495 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:44:02,282 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:44:02,291 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:44:02,298 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:44:02,299 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:44:02,299 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo QSFq8S_Ui5g dans Qdrant...
2025-08-19 12:44:02,687 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:44:02,689 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g déjà présente dans la base
2025-08-19 12:44:02,695 - __streamlit_app__ - INFO - Question utilisateur: quelle était la question précédente ?
2025-08-19 12:44:02,697 - __streamlit_app__ - INFO - Recherche de chunks pertinents pour: quelle était la question précédente ?
2025-08-19 12:44:02,698 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'quelle était la question précédente ?'
2025-08-19 12:44:02,699 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 12:44:02,703 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 12:44:02,703 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 12:44:07,460 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 12:44:08,400 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 12:44:08,774 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 12:44:08,777 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 12:44:08,777 - __retrieve__ - INFO - Application du filtre pour la vidéo : QSFq8S_Ui5g
2025-08-19 12:44:08,777 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-19 12:44:09,022 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-19 12:44:09,024 - __retrieve__ - INFO - Retrieved 5 relevant chunks.
2025-08-19 12:44:09,025 - __streamlit_app__ - INFO - Trouvé 5 chunks pertinents
2025-08-19 12:44:09,033 - __streamlit_app__ - INFO - Génération de réponse avec le modèle openai/gpt-oss-120b
2025-08-19 12:44:09,033 - __query__ - INFO - Construction du prompt pour la question: 'Contexte de la conversation:
assistant: La vidéo porte sur les notions de base du **big data** : les différents formats de fichiers (JSON, CSV, Avro, Parquet), les types de données (structurées, semi‑structurées, non structurées), le fonctionnement du calcul distribué et du stockage sur du matériel « commodity » en cluster. Elle explique ensuite les **stratégies d’ingestion de données** (chargement incrémentiel, chargement complet, chargement « absurde ») et montre comment mettre en œuvre un chargement incrémentiel avec **Apache Spark** depuis une base MySQL, en appliquant les logiques métier, de déduplication, de filtrage et de validation. Enfin, elle donne quelques conseils pour rédiger les descriptions de projets sur un CV.La vidéo porte sur les notions de base du **big data** : les différents formats de fichiers (JSON, CSV, Avro, Parquet), les types de données (structurées, semi‑structurées, non structurées), le fonctionnement du calcul distribué et du stockage sur du matériel « commodity » en cluster. Elle explique ensuite les **stratégies d’ingestion de données** (chargement incrémentiel, chargement complet, chargement « absurde ») et montre comment mettre en œuvre un chargement incrémentiel avec **Apache Spark** depuis une base MySQL, en appliquant les logiques métier, de déduplication, de filtrage et de validation. Enfin, elle donne quelques conseils pour rédiger les descriptions de projets sur un CV. 
user: Bien. C'est quoi le format de fichier recommandé par la vidéo dans le cas d'un projet de data eng ?
assistant: Je ne trouve pas d'information pertinente dans les transcriptions fournies.Je ne trouve pas d'information pertinente dans les transcriptions fournies. 
user: quelle était la question précédente ?

Question actuelle: quelle était la question précédente ?'
2025-08-19 12:44:09,035 - __query__ - INFO - Appel à Groq pour générer la réponse...
2025-08-19 12:44:09,035 - __grok__ - INFO - Generating answer with Groq model 'openai/gpt-oss-120b'
2025-08-19 12:44:09,050 - __grok__ - INFO - Groq client created
2025-08-19 12:44:10,418 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-19 12:44:10,422 - __grok__ - INFO - Answer generated successfully.
2025-08-19 12:44:10,422 - __query__ - INFO - Réponse générée avec succès.
2025-08-19 12:44:10,423 - __streamlit_app__ - INFO - Réponse générée avec succès
2025-08-19 12:44:11,916 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:53:02,077 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:53:02,098 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:53:02,107 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:53:02,107 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:53:02,107 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo QSFq8S_Ui5g dans Qdrant...
2025-08-19 12:53:02,767 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:53:02,772 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g déjà présente dans la base
2025-08-19 12:53:02,780 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:53:06,126 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:53:06,134 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:53:06,140 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:53:06,141 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:53:06,141 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo QSFq8S_Ui5g dans Qdrant...
2025-08-19 12:53:06,273 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:53:06,276 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g déjà présente dans la base
2025-08-19 12:53:06,284 - __streamlit_app__ - INFO - Réinitialisation de la conversation demandée
2025-08-19 12:53:06,465 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:53:06,466 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:53:06,467 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:53:06,468 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=QSFq8S_Ui5g
2025-08-19 12:53:06,468 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo QSFq8S_Ui5g dans Qdrant...
2025-08-19 12:53:06,595 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:53:06,597 - __streamlit_app__ - INFO - Vidéo QSFq8S_Ui5g déjà présente dans la base
2025-08-19 12:53:06,598 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:53:26,586 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:53:26,588 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:53:26,594 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:53:29,703 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:53:29,706 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:53:29,711 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 12:53:29,712 - __youtube__ - INFO - Extracting video ID from URL: www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 12:53:29,712 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo WMeOZAHusGQ dans Qdrant...
2025-08-19 12:53:30,127 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:53:30,129 - __streamlit_app__ - INFO - Vidéo WMeOZAHusGQ non trouvée, démarrage de l'ingestion...
2025-08-19 12:53:30,130 - __streamlit_app__ - INFO - Récupération de la transcription pour WMeOZAHusGQ
2025-08-19 12:53:31,569 - __streamlit_app__ - INFO - Transcription récupérée (180 segments)
2025-08-19 12:53:31,572 - __streamlit_app__ - INFO - Sauvegarde de la transcription pour WMeOZAHusGQ
2025-08-19 12:53:31,572 - __youtube__ - INFO - Saving TXT to WMeOZAHusGQ.txt
2025-08-19 12:53:31,573 - __youtube__ - INFO - Saved TXT to ../downloads/WMeOZAHusGQ.txt
2025-08-19 12:53:31,573 - __streamlit_app__ - INFO - Transcription sauvegardée dans ./downloads/WMeOZAHusGQ.txt
2025-08-19 12:53:31,574 - __streamlit_app__ - INFO - Traitement et stockage de WMeOZAHusGQ dans Qdrant
2025-08-19 12:53:31,575 - __embedding__ - INFO - Starting processing for TXT file: ./downloads/WMeOZAHusGQ.txt
2025-08-19 12:53:31,576 - __embedding__ - INFO - Loaded text from ./downloads/WMeOZAHusGQ.txt, length: 6220 chars
2025-08-19 12:53:31,576 - __embedding__ - INFO - Splitting text into chunks (size=700, overlap=100)
2025-08-19 12:53:31,578 - __embedding__ - INFO - Text split into 11 chunks
2025-08-19 12:53:31,578 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 12:53:31,581 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 12:53:31,582 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 12:53:39,615 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 12:53:39,619 - __embedding__ - INFO - Embedding 11 text chunks
2025-08-19 12:53:43,065 - __embedding__ - INFO - Embedded 11 text chunks
2025-08-19 12:53:43,501 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 12:53:43,874 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 12:53:43,876 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 12:53:44,004 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 12:53:44,004 - __qdrant__ - INFO - Collection 'youtube_transcripts' already exists.
2025-08-19 12:53:44,004 - __qdrant__ - INFO - Upserting 11 points into collection 'youtube_transcripts'
2025-08-19 12:53:44,643 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points?wait=true "HTTP/1.1 200 OK"
2025-08-19 12:53:44,646 - __qdrant__ - INFO - Successfully upserted points into collection 'youtube_transcripts'
2025-08-19 12:53:44,646 - __embedding__ - INFO - Finished processing and storing 11 chunks from ./downloads/WMeOZAHusGQ.txt
2025-08-19 12:53:45,070 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:53:45,071 - __streamlit_app__ - INFO - Vidéo WMeOZAHusGQ confirmée dans Qdrant
2025-08-19 12:53:45,076 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:53:58,448 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:53:58,461 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:53:58,468 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 12:53:58,469 - __youtube__ - INFO - Extracting video ID from URL: www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 12:53:58,470 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo WMeOZAHusGQ dans Qdrant...
2025-08-19 12:53:58,851 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:53:58,854 - __streamlit_app__ - INFO - Vidéo WMeOZAHusGQ déjà présente dans la base
2025-08-19 12:53:58,855 - __streamlit_app__ - INFO - Question utilisateur: What's about the video ?
2025-08-19 12:53:58,858 - __streamlit_app__ - INFO - Recherche de chunks pertinents pour: What's about the video ?
2025-08-19 12:53:58,859 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'What's about the video ?'
2025-08-19 12:53:58,859 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 12:53:58,863 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 12:53:58,863 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 12:54:03,653 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 12:54:04,193 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 12:54:04,569 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 12:54:04,570 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 12:54:04,570 - __retrieve__ - INFO - Application du filtre pour la vidéo : WMeOZAHusGQ
2025-08-19 12:54:04,570 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-19 12:54:04,809 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-19 12:54:04,812 - __retrieve__ - INFO - Retrieved 5 relevant chunks.
2025-08-19 12:54:04,813 - __streamlit_app__ - INFO - Trouvé 5 chunks pertinents
2025-08-19 12:54:04,814 - __streamlit_app__ - INFO - Génération de réponse avec le modèle openai/gpt-oss-120b
2025-08-19 12:54:04,814 - __query__ - INFO - Construction du prompt pour la question: 'What's about the video ?'
2025-08-19 12:54:04,815 - __query__ - INFO - Appel à Grok pour générer la réponse...
2025-08-19 12:54:04,815 - __grok__ - INFO - Generating answer with Groq model 'openai/gpt-oss-120b'
2025-08-19 12:54:04,823 - __grok__ - INFO - Groq client created
2025-08-19 12:54:07,040 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-19 12:54:07,047 - __grok__ - INFO - Answer generated successfully.
2025-08-19 12:54:07,047 - __query__ - INFO - Réponse générée avec succès.
2025-08-19 12:54:07,047 - __streamlit_app__ - INFO - Réponse générée avec succès
2025-08-19 12:54:26,546 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:54:42,459 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:54:42,467 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:54:42,473 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 12:54:42,474 - __youtube__ - INFO - Extracting video ID from URL: www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 12:54:42,475 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo WMeOZAHusGQ dans Qdrant...
2025-08-19 12:54:42,690 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:54:42,693 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:54:42,697 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 12:54:42,697 - __youtube__ - INFO - Extracting video ID from URL: www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 12:54:42,697 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo WMeOZAHusGQ dans Qdrant...
2025-08-19 12:54:42,864 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:54:43,200 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:54:43,201 - __streamlit_app__ - INFO - Vidéo WMeOZAHusGQ déjà présente dans la base
2025-08-19 12:54:43,204 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 12:55:32,564 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 12:55:32,579 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 12:55:32,585 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 12:55:32,586 - __youtube__ - INFO - Extracting video ID from URL: www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 12:55:32,586 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo WMeOZAHusGQ dans Qdrant...
2025-08-19 12:55:33,010 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 12:55:33,012 - __streamlit_app__ - INFO - Vidéo WMeOZAHusGQ déjà présente dans la base
2025-08-19 12:55:33,017 - __streamlit_app__ - INFO - Question utilisateur: Ok. dis moi quelles technologies on retrouve dans le projet :  stockage, source, ingestion, traitement, visualisation , ?
2025-08-19 12:55:33,019 - __streamlit_app__ - INFO - Recherche de chunks pertinents pour: Ok. dis moi quelles technologies on retrouve dans le projet :  stockage, source, ingestion, traitement, visualisation , ?
2025-08-19 12:55:33,020 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'Ok. dis moi quelles technologies on retrouve dans le projet :  stockage, source, ingestion, traitement, visualisation , ?'
2025-08-19 12:55:33,021 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 12:55:33,027 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 12:55:33,027 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 12:55:37,873 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 12:55:38,420 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 12:55:38,821 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 12:55:38,822 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 12:55:38,823 - __retrieve__ - INFO - Application du filtre pour la vidéo : WMeOZAHusGQ
2025-08-19 12:55:38,823 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-19 12:55:39,074 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-19 12:55:39,079 - __retrieve__ - INFO - Retrieved 5 relevant chunks.
2025-08-19 12:55:39,080 - __streamlit_app__ - INFO - Trouvé 5 chunks pertinents
2025-08-19 12:55:39,084 - __streamlit_app__ - INFO - Génération de réponse avec le modèle openai/gpt-oss-120b
2025-08-19 12:55:39,085 - __query__ - INFO - Construction du prompt pour la question: 'Ok. dis moi quelles technologies on retrouve dans le projet :  stockage, source, ingestion, traitement, visualisation , ?'
2025-08-19 12:55:39,085 - __query__ - INFO - Appel à Grok pour générer la réponse...
2025-08-19 12:55:39,086 - __grok__ - INFO - Generating answer with Groq model 'openai/gpt-oss-120b'
2025-08-19 12:55:39,102 - __grok__ - INFO - Groq client created
2025-08-19 12:55:41,285 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-19 12:55:41,289 - __grok__ - INFO - Answer generated successfully.
2025-08-19 12:55:41,289 - __query__ - INFO - Réponse générée avec succès.
2025-08-19 12:55:41,289 - __streamlit_app__ - INFO - Réponse générée avec succès
2025-08-19 12:55:58,272 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 13:05:16,077 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 13:05:16,190 - __streamlit_app__ - INFO - Chargement du modèle d'embedding...
2025-08-19 13:05:16,190 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 13:05:25,270 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 13:05:25,271 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 13:05:30,535 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 13:05:30,537 - __streamlit_app__ - INFO - Modèle d'embedding chargé avec succès
2025-08-19 13:05:30,550 - __streamlit_app__ - INFO - Initialisation du client Qdrant...
2025-08-19 13:05:31,098 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 13:05:31,809 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 13:05:31,818 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[]
2025-08-19 13:05:31,819 - __streamlit_app__ - INFO - Client Qdrant initialisé
2025-08-19 13:05:31,823 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 13:05:31,832 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 13:05:38,255 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 13:05:38,300 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 13:05:38,306 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: # streamlit_app.py - Version complète mise à jour  import streamlit as st from src.youtube import extract_video_id, get_available_transcript_languages, save_txt_with_language from src.embedding import process_and_store_transcript_txt from src.qdrant import get_qdrant_client, check_video_exists from src.retrieve import retrieve_relevant_chunks from src.query import answer_question_with_grok from src.embedding import get_embedding_model from youtube_transcript_api import YouTubeTranscriptApi from src.loggings import configure_logging import os import time  # Configuration du logging logger = configure_logging(log_file="streamlit_app.log", logger_name="__streamlit_app__") logger.info("Démarrage de l'application Streamlit")  # Configuration de la page st.set_page_config(     page_title="Naive RAG YouTube",     page_icon="🎥",     layout="wide" )  # === CACHING DES MODELES === @st.cache_resource def load_embedding_model():     """Charge le modèle d'embedding au démarrage et le garde en cache"""     with st.spinner("Chargement du modèle d'embedding..."):         logger.info("Chargement du modèle d'embedding...")         model = get_embedding_model()         logger.info("Modèle d'embedding chargé avec succès")         return model  @st.cache_resource def get_qdrant_client_cached():     """Cache le client Qdrant"""     logger.info("Initialisation du client Qdrant...")     client = get_qdrant_client()     logger.info("Client Qdrant initialisé")     return client  # === CONSTANTES === COLLECTION_NAME = "youtube_transcripts" AVAILABLE_MODELS = [     "openai/gpt-oss-120b",     "openai/gpt-oss-20b",      "qwen/qwen3-32b" ] DEFAULT_MODEL = "openai/gpt-oss-120b" DEFAULT_TEMPERATURE = 0.7 DEFAULT_MAX_TOKENS = 1000 DEFAULT_LANGUAGE = "en"  # === INITIALISATION === if 'messages' not in st.session_state:     st.session_state.messages = []     logger.debug("Initialisation de st.session_state.messages") if 'current_video_id' not in st.session_state:     st.session_state.current_video_id = None     logger.debug("Initialisation de st.session_state.current_video_id") if 'video_processed' not in st.session_state:     st.session_state.video_processed = False     logger.debug("Initialisation de st.session_state.video_processed") if 'temperature' not in st.session_state:     st.session_state.temperature = DEFAULT_TEMPERATURE     logger.debug("Initialisation de st.session_state.temperature") if 'max_tokens' not in st.session_state:     st.session_state.max_tokens = DEFAULT_MAX_TOKENS     logger.debug("Initialisation de st.session_state.max_tokens") if 'selected_language' not in st.session_state:     st.session_state.selected_language = DEFAULT_LANGUAGE     logger.debug("Initialisation de st.session_state.selected_language") if 'available_languages' not in st.session_state:     st.session_state.available_languages = []     logger.debug("Initialisation de st.session_state.available_languages")  # Charger les modèles au démarrage try:     embedding_model = load_embedding_model()     qdrant_client = get_qdrant_client_cached()     ytt = YouTubeTranscriptApi()     logger.info("Tous les modèles et clients chargés avec succès") except Exception as e:     logger.error(f"Erreur lors du chargement des modèles/clients: {e}")     st.error("Erreur lors du chargement de l'application. Veuillez consulter les logs.")  # === SIDEBAR === with st.sidebar:     st.title("🎥 Naive RAG YouTube")     st.markdown("---")          # Input URL     youtube_url = st.text_input("🔗 URL YouTube", placeholder="https://www.youtube.com/watch?v=...")          # Afficher les langues disponibles une fois l'URL saisie     if youtube_url and st.session_state.available_languages:         language_options = {f"{lang['language']} ({lang['language_code']})": lang['language_code']                            for lang in st.session_state.available_languages}         selected_language_display = st.selectbox(             "🌍 Langue de transcription",             options=list(language_options.keys()),             index=0         )         st.session_state.selected_language = language_options[selected_language_display]                  # Afficher les détails sur la langue sélectionnée         selected_lang_info = next((lang for lang in st.session_state.available_languages                                   if lang['language_code'] == st.session_state.selected_language), None)         if selected_lang_info:             lang_type = "générée" if selected_lang_info['is_generated'] else "originale"             st.caption(f"Langue {lang_type}")          # Sélecteur de modèle     selected_model = st.selectbox(         "🤖 Modèle de réponse",         options=AVAILABLE_MODELS,         index=AVAILABLE_MODELS.index(DEFAULT_MODEL) if DEFAULT_MODEL in AVAILABLE_MODELS else 0     )          st.markdown("---")          # Paramètres de génération     st.subheader("⚙️ Paramètres de génération")     st.session_state.temperature = st.slider(         "Température",          min_value=0.0,          max_value=1.0,          value=float(st.session_state.temperature),          step=0.1,         help="Contrôle la créativité de la réponse (0 = déterministe, 1 = créatif)"     )          st.session_state.max_tokens = st.slider(         "Max Tokens",          min_value=100,          max_value=2000,          value=int(st.session_state.max_tokens),          step=100,         help="Longueur maximale de la réponse"     )          st.markdown("---")          if youtube_url:         logger.info(f"Traitement de l'URL YouTube: {youtube_url}")                  # Extraire l'ID et vérifier les langues disponibles         video_id = extract_video_id(youtube_url)         if video_id and not st.session_state.available_languages:             with st.spinner("🔍 Récupération des langues disponibles..."):                 st.session_state.available_languages = get_available_transcript_languages(video_id)                 if st.session_state.available_languages:                     st.success(f"✅ {len(st.session_state.available_languages)} langues trouvées")                 else:                     st.warning("⚠️ Aucune transcription disponible")                  if not video_id:             st.error("❌ URL YouTube invalide")             logger.warning(f"URL YouTube invalide fournie: {youtube_url}")         elif st.session_state.available_languages:             # Vérifier si la vidéo existe déjà avec la langue sélectionnée             logger.info(f"Vérification de l'existence de la vidéo {video_id} en {st.session_state.selected_language} dans Qdrant...")                          # Vérifier si la vidéo existe déjà             video_exists = check_video_exists(qdrant_client, COLLECTION_NAME, video_id)             if video_exists:                 # Vérifier si la langue spécifique existe                 try:                     count_result = qdrant_client.count(                         collection_name=COLLECTION_NAME,                         count_filter=models.Filter(                             must=[                                 models.FieldCondition(                                     key="video_id",                                     match=models.MatchValue(value=video_id)                                 ),                                 models.FieldCondition(                                     key="language",                                     match=models.MatchValue(value=st.session_state.selected_language)                                 )                             ]                         )                     )                     language_exists = count_result.count > 0                                          if language_exists:                         st.success(f"✅ Vidéo déjà traitée en {st.session_state.selected_language} (ID: {video_id})")                         logger.info(f"Vidéo {video_id} déjà présente en {st.session_state.selected_language} dans la base")                         st.session_state.current_video_id = video_id                         st.session_state.video_processed = True                     else:                         st.info(f"🔄 Vidéo traitée mais pas en {st.session_state.selected_language} - Lancement de l'ingestion...")                         logger.info(f"Vidéo {video_id} existe mais pas en {st.session_state.selected_language}")                         video_exists = False  # Forcer le traitement                 except Exception as e:                     logger.error(f"Erreur lors de la vérification de la langue: {e}")                     video_exists = False             else:                 st.info("🔄 Vidéo non traitée - Lancement de l'ingestion...")                 logger.info(f"Vidéo {video_id} non trouvée, démarrage de l'ingestion...")                          if not video_exists:                 # Processus d'ingestion                 try:                     with st.spinner("📥 Récupération de la transcription..."):                         logger.info(f"Récupération de la transcription pour {video_id} en {st.session_state.selected_language}")                         # Essayer d'abord la langue sélectionnée, sinon prendre la première disponible                         try:                             transcript = ytt.fetch(video_id=video_id, languages=[st.session_state.selected_language])                         except:                             # Si la langue spécifique n'est pas disponible, prendre la première                             first_lang = st.session_state.available_languages[0]['language_code']                             st.warning(f"Langue {st.session_state.selected_language} non disponible, utilisation de {first_lang}")                             st.session_state.selected_language = first_lang                             transcript = ytt.fetch(video_id=video_id, languages=[st.session_state.selected_language])                                                  logger.info(f"Transcription récupérée ({len(transcript)} segments)")                                          with st.spinner("💾 Sauvegarde de la transcription..."):                         logger.info(f"Sauvegarde de la transcription pour {video_id} en {st.session_state.selected_language}")                         os.makedirs("./downloads", exist_ok=True)                         txt_file_name = f"{video_id}_{st.session_state.selected_language}.txt"                         txt_file_path = f"./downloads/{txt_file_name}"                                                  try:                             save_txt_with_language(transcript, video_id, st.session_state.selected_language, txt_file_name)                             logger.info(f"Transcription sauvegardée dans {txt_file_path}")                         except Exception as e:                             logger.error(f"Erreur lors de la sauvegarde de la transcription pour {video_id}: {e}")                             raise                                          with st.spinner("🧠 Traitement et stockage dans Qdrant..."):                         logger.info(f"Traitement et stockage de {video_id} en {st.session_state.selected_language} dans Qdrant")                         process_and_store_transcript_txt(                             txt_file_path=txt_file_path,                             collection_name=COLLECTION_NAME,                             video_id=video_id,                             language_code=st.session_state.selected_language,                             chunk_size=700,                             chunk_overlap=100                         )                                              with st.spinner("🔍 Vérification du stockage..."):                         # Vérifier le stockage                         try:                             count_result = qdrant_client.count(                                 collection_name=COLLECTION_NAME,                                 count_filter=models.Filter(                                     must=[                                         models.FieldCondition(                                             key="video_id",                                             match=models.MatchValue(value=video_id)                                         ),                                         models.FieldCondition(                                             key="language",                                             match=models.MatchValue(value=st.session_state.selected_language)                                         )                                     ]                                 )                             )                             language_stored = count_result.count > 0                                                          if language_stored:                                 logger.info(f"Vidéo {video_id} en {st.session_state.selected_language} confirmée dans Qdrant")                                 st.success("✅ Vidéo traitée et stockée avec succès!")                                 st.session_state.current_video_id = video_id                                 st.session_state.video_processed = True                             else:                                 logger.warning(f"Vidéo {video_id} en {st.session_state.selected_language} non trouvée dans Qdrant après ingestion")                                 st.warning("⚠️ Problème lors du stockage")                                 st.session_state.video_processed = False                         except Exception as e:                             logger.error(f"Erreur lors de la vérification du stockage: {e}")                             st.session_state.video_processed = False                                      except Exception as e:                     error_msg = f"❌ Erreur lors du traitement: {str(e)}"                     st.error(error_msg)                     logger.error(f"Erreur lors du traitement de la vidéo {video_id}: {e}")                     st.session_state.video_processed = False  # === CHAT INTERFACE === st.title("💬 Chat avec votre vidéo YouTube")  # Afficher l'historique des messages logger.debug(f"Affichage de {len(st.session_state.messages)} messages dans l'historique") for message in st.session_state.messages:     with st.chat_message(message["role"]):         st.markdown(message["content"])  # Input utilisateur if prompt := st.chat_input("Posez votre question sur la vidéo...",                            disabled=not st.session_state.video_processed):          logger.info(f"Question utilisateur: {prompt}")     # Ajouter le message utilisateur     st.session_state.messages.append({"role": "user", "content": prompt})     with st.chat_message("user"):         st.markdown(prompt)          # Réponse de l'assistant     with st.chat_message("assistant"):         message_placeholder = st.empty()         full_response = ""                  try:             if not st.session_state.current_video_id:                 full_response = "❌ Aucune vidéo sélectionnée. Veuillez entrer une URL YouTube dans la sidebar."                 logger.warning("Tentative de question sans vidéo sélectionnée")             else:                 # Récupérer les chunks pertinents avec la langue sélectionnée                 with st.spinner("🔍 Recherche des informations pertinentes..."):                     logger.info(f"Recherche de chunks pertinents pour: {prompt}")                     retrieved_chunks = retrieve_relevant_chunks(                         query=prompt,                         collection_name=COLLECTION_NAME,                         video_id=st.session_state.current_video_id,                         language_code=st.session_state.selected_language,  # Utiliser la langue sélectionnée                         top_k=5                     )                     logger.info(f"Trouvé {len(retrieved_chunks)} chunks pertinents")                                  if not retrieved_chunks:                     full_response = "❌ Je n'ai trouvé aucune information pertinente dans la vidéo pour répondre à votre question."                     logger.info("Aucun chunk pertinent trouvé pour la requête")                 else:                     # Générer la réponse avec l'historique de conversation                     with st.spinner("🤖 Génération de la réponse..."):                         logger.info(f"Génération de réponse avec le modèle {selected_model}")                         full_response = answer_question_with_grok(                             question=prompt,                             chunks=retrieved_chunks,                             model=selected_model,                             max_tokens=st.session_state.max_tokens,                             temperature=st.session_state.temperature,                             conversation_history=st.session_state.messages                         )                         logger.info("Réponse générée avec succès")                          # Afficher la réponse progressivement (effet de frappe)             for chunk in full_response.split():                 full_response += chunk + " "                 time.sleep(0.05)                 message_placeholder.markdown(full_response + "▌")             message_placeholder.markdown(full_response)                      except Exception as e:             error_response = f"❌ Une erreur s'est produite: {str(e)}"             message_placeholder.markdown(error_response)             logger.error(f"Erreur lors de la génération de la réponse: {e}")             full_response = error_response          # Ajouter la réponse à l'historique     st.session_state.messages.append({"role": "assistant", "content": full_response})     logger.debug("Réponse ajoutée à l'historique")  # Bouton pour réinitialiser la conversation if st.sidebar.button("🗑️ Réinitialiser la conversation"):     logger.info("Réinitialisation de la conversation demandée")     st.session_state.messages = []     st.session_state.current_video_id = None     st.session_state.video_processed = False     st.session_state.selected_language = DEFAULT_LANGUAGE     st.session_state.available_languages = []     st.rerun()  logger.info("Fin du rendu de l'application Streamlit")
2025-08-19 13:05:38,308 - __youtube__ - INFO - Extracting video ID from URL: # streamlit_app.py - Version complète mise à jour  import streamlit as st from src.youtube import extract_video_id, get_available_transcript_languages, save_txt_with_language from src.embedding import process_and_store_transcript_txt from src.qdrant import get_qdrant_client, check_video_exists from src.retrieve import retrieve_relevant_chunks from src.query import answer_question_with_grok from src.embedding import get_embedding_model from youtube_transcript_api import YouTubeTranscriptApi from src.loggings import configure_logging import os import time  # Configuration du logging logger = configure_logging(log_file="streamlit_app.log", logger_name="__streamlit_app__") logger.info("Démarrage de l'application Streamlit")  # Configuration de la page st.set_page_config(     page_title="Naive RAG YouTube",     page_icon="🎥",     layout="wide" )  # === CACHING DES MODELES === @st.cache_resource def load_embedding_model():     """Charge le modèle d'embedding au démarrage et le garde en cache"""     with st.spinner("Chargement du modèle d'embedding..."):         logger.info("Chargement du modèle d'embedding...")         model = get_embedding_model()         logger.info("Modèle d'embedding chargé avec succès")         return model  @st.cache_resource def get_qdrant_client_cached():     """Cache le client Qdrant"""     logger.info("Initialisation du client Qdrant...")     client = get_qdrant_client()     logger.info("Client Qdrant initialisé")     return client  # === CONSTANTES === COLLECTION_NAME = "youtube_transcripts" AVAILABLE_MODELS = [     "openai/gpt-oss-120b",     "openai/gpt-oss-20b",      "qwen/qwen3-32b" ] DEFAULT_MODEL = "openai/gpt-oss-120b" DEFAULT_TEMPERATURE = 0.7 DEFAULT_MAX_TOKENS = 1000 DEFAULT_LANGUAGE = "en"  # === INITIALISATION === if 'messages' not in st.session_state:     st.session_state.messages = []     logger.debug("Initialisation de st.session_state.messages") if 'current_video_id' not in st.session_state:     st.session_state.current_video_id = None     logger.debug("Initialisation de st.session_state.current_video_id") if 'video_processed' not in st.session_state:     st.session_state.video_processed = False     logger.debug("Initialisation de st.session_state.video_processed") if 'temperature' not in st.session_state:     st.session_state.temperature = DEFAULT_TEMPERATURE     logger.debug("Initialisation de st.session_state.temperature") if 'max_tokens' not in st.session_state:     st.session_state.max_tokens = DEFAULT_MAX_TOKENS     logger.debug("Initialisation de st.session_state.max_tokens") if 'selected_language' not in st.session_state:     st.session_state.selected_language = DEFAULT_LANGUAGE     logger.debug("Initialisation de st.session_state.selected_language") if 'available_languages' not in st.session_state:     st.session_state.available_languages = []     logger.debug("Initialisation de st.session_state.available_languages")  # Charger les modèles au démarrage try:     embedding_model = load_embedding_model()     qdrant_client = get_qdrant_client_cached()     ytt = YouTubeTranscriptApi()     logger.info("Tous les modèles et clients chargés avec succès") except Exception as e:     logger.error(f"Erreur lors du chargement des modèles/clients: {e}")     st.error("Erreur lors du chargement de l'application. Veuillez consulter les logs.")  # === SIDEBAR === with st.sidebar:     st.title("🎥 Naive RAG YouTube")     st.markdown("---")          # Input URL     youtube_url = st.text_input("🔗 URL YouTube", placeholder="https://www.youtube.com/watch?v=...")          # Afficher les langues disponibles une fois l'URL saisie     if youtube_url and st.session_state.available_languages:         language_options = {f"{lang['language']} ({lang['language_code']})": lang['language_code']                            for lang in st.session_state.available_languages}         selected_language_display = st.selectbox(             "🌍 Langue de transcription",             options=list(language_options.keys()),             index=0         )         st.session_state.selected_language = language_options[selected_language_display]                  # Afficher les détails sur la langue sélectionnée         selected_lang_info = next((lang for lang in st.session_state.available_languages                                   if lang['language_code'] == st.session_state.selected_language), None)         if selected_lang_info:             lang_type = "générée" if selected_lang_info['is_generated'] else "originale"             st.caption(f"Langue {lang_type}")          # Sélecteur de modèle     selected_model = st.selectbox(         "🤖 Modèle de réponse",         options=AVAILABLE_MODELS,         index=AVAILABLE_MODELS.index(DEFAULT_MODEL) if DEFAULT_MODEL in AVAILABLE_MODELS else 0     )          st.markdown("---")          # Paramètres de génération     st.subheader("⚙️ Paramètres de génération")     st.session_state.temperature = st.slider(         "Température",          min_value=0.0,          max_value=1.0,          value=float(st.session_state.temperature),          step=0.1,         help="Contrôle la créativité de la réponse (0 = déterministe, 1 = créatif)"     )          st.session_state.max_tokens = st.slider(         "Max Tokens",          min_value=100,          max_value=2000,          value=int(st.session_state.max_tokens),          step=100,         help="Longueur maximale de la réponse"     )          st.markdown("---")          if youtube_url:         logger.info(f"Traitement de l'URL YouTube: {youtube_url}")                  # Extraire l'ID et vérifier les langues disponibles         video_id = extract_video_id(youtube_url)         if video_id and not st.session_state.available_languages:             with st.spinner("🔍 Récupération des langues disponibles..."):                 st.session_state.available_languages = get_available_transcript_languages(video_id)                 if st.session_state.available_languages:                     st.success(f"✅ {len(st.session_state.available_languages)} langues trouvées")                 else:                     st.warning("⚠️ Aucune transcription disponible")                  if not video_id:             st.error("❌ URL YouTube invalide")             logger.warning(f"URL YouTube invalide fournie: {youtube_url}")         elif st.session_state.available_languages:             # Vérifier si la vidéo existe déjà avec la langue sélectionnée             logger.info(f"Vérification de l'existence de la vidéo {video_id} en {st.session_state.selected_language} dans Qdrant...")                          # Vérifier si la vidéo existe déjà             video_exists = check_video_exists(qdrant_client, COLLECTION_NAME, video_id)             if video_exists:                 # Vérifier si la langue spécifique existe                 try:                     count_result = qdrant_client.count(                         collection_name=COLLECTION_NAME,                         count_filter=models.Filter(                             must=[                                 models.FieldCondition(                                     key="video_id",                                     match=models.MatchValue(value=video_id)                                 ),                                 models.FieldCondition(                                     key="language",                                     match=models.MatchValue(value=st.session_state.selected_language)                                 )                             ]                         )                     )                     language_exists = count_result.count > 0                                          if language_exists:                         st.success(f"✅ Vidéo déjà traitée en {st.session_state.selected_language} (ID: {video_id})")                         logger.info(f"Vidéo {video_id} déjà présente en {st.session_state.selected_language} dans la base")                         st.session_state.current_video_id = video_id                         st.session_state.video_processed = True                     else:                         st.info(f"🔄 Vidéo traitée mais pas en {st.session_state.selected_language} - Lancement de l'ingestion...")                         logger.info(f"Vidéo {video_id} existe mais pas en {st.session_state.selected_language}")                         video_exists = False  # Forcer le traitement                 except Exception as e:                     logger.error(f"Erreur lors de la vérification de la langue: {e}")                     video_exists = False             else:                 st.info("🔄 Vidéo non traitée - Lancement de l'ingestion...")                 logger.info(f"Vidéo {video_id} non trouvée, démarrage de l'ingestion...")                          if not video_exists:                 # Processus d'ingestion                 try:                     with st.spinner("📥 Récupération de la transcription..."):                         logger.info(f"Récupération de la transcription pour {video_id} en {st.session_state.selected_language}")                         # Essayer d'abord la langue sélectionnée, sinon prendre la première disponible                         try:                             transcript = ytt.fetch(video_id=video_id, languages=[st.session_state.selected_language])                         except:                             # Si la langue spécifique n'est pas disponible, prendre la première                             first_lang = st.session_state.available_languages[0]['language_code']                             st.warning(f"Langue {st.session_state.selected_language} non disponible, utilisation de {first_lang}")                             st.session_state.selected_language = first_lang                             transcript = ytt.fetch(video_id=video_id, languages=[st.session_state.selected_language])                                                  logger.info(f"Transcription récupérée ({len(transcript)} segments)")                                          with st.spinner("💾 Sauvegarde de la transcription..."):                         logger.info(f"Sauvegarde de la transcription pour {video_id} en {st.session_state.selected_language}")                         os.makedirs("./downloads", exist_ok=True)                         txt_file_name = f"{video_id}_{st.session_state.selected_language}.txt"                         txt_file_path = f"./downloads/{txt_file_name}"                                                  try:                             save_txt_with_language(transcript, video_id, st.session_state.selected_language, txt_file_name)                             logger.info(f"Transcription sauvegardée dans {txt_file_path}")                         except Exception as e:                             logger.error(f"Erreur lors de la sauvegarde de la transcription pour {video_id}: {e}")                             raise                                          with st.spinner("🧠 Traitement et stockage dans Qdrant..."):                         logger.info(f"Traitement et stockage de {video_id} en {st.session_state.selected_language} dans Qdrant")                         process_and_store_transcript_txt(                             txt_file_path=txt_file_path,                             collection_name=COLLECTION_NAME,                             video_id=video_id,                             language_code=st.session_state.selected_language,                             chunk_size=700,                             chunk_overlap=100                         )                                              with st.spinner("🔍 Vérification du stockage..."):                         # Vérifier le stockage                         try:                             count_result = qdrant_client.count(                                 collection_name=COLLECTION_NAME,                                 count_filter=models.Filter(                                     must=[                                         models.FieldCondition(                                             key="video_id",                                             match=models.MatchValue(value=video_id)                                         ),                                         models.FieldCondition(                                             key="language",                                             match=models.MatchValue(value=st.session_state.selected_language)                                         )                                     ]                                 )                             )                             language_stored = count_result.count > 0                                                          if language_stored:                                 logger.info(f"Vidéo {video_id} en {st.session_state.selected_language} confirmée dans Qdrant")                                 st.success("✅ Vidéo traitée et stockée avec succès!")                                 st.session_state.current_video_id = video_id                                 st.session_state.video_processed = True                             else:                                 logger.warning(f"Vidéo {video_id} en {st.session_state.selected_language} non trouvée dans Qdrant après ingestion")                                 st.warning("⚠️ Problème lors du stockage")                                 st.session_state.video_processed = False                         except Exception as e:                             logger.error(f"Erreur lors de la vérification du stockage: {e}")                             st.session_state.video_processed = False                                      except Exception as e:                     error_msg = f"❌ Erreur lors du traitement: {str(e)}"                     st.error(error_msg)                     logger.error(f"Erreur lors du traitement de la vidéo {video_id}: {e}")                     st.session_state.video_processed = False  # === CHAT INTERFACE === st.title("💬 Chat avec votre vidéo YouTube")  # Afficher l'historique des messages logger.debug(f"Affichage de {len(st.session_state.messages)} messages dans l'historique") for message in st.session_state.messages:     with st.chat_message(message["role"]):         st.markdown(message["content"])  # Input utilisateur if prompt := st.chat_input("Posez votre question sur la vidéo...",                            disabled=not st.session_state.video_processed):          logger.info(f"Question utilisateur: {prompt}")     # Ajouter le message utilisateur     st.session_state.messages.append({"role": "user", "content": prompt})     with st.chat_message("user"):         st.markdown(prompt)          # Réponse de l'assistant     with st.chat_message("assistant"):         message_placeholder = st.empty()         full_response = ""                  try:             if not st.session_state.current_video_id:                 full_response = "❌ Aucune vidéo sélectionnée. Veuillez entrer une URL YouTube dans la sidebar."                 logger.warning("Tentative de question sans vidéo sélectionnée")             else:                 # Récupérer les chunks pertinents avec la langue sélectionnée                 with st.spinner("🔍 Recherche des informations pertinentes..."):                     logger.info(f"Recherche de chunks pertinents pour: {prompt}")                     retrieved_chunks = retrieve_relevant_chunks(                         query=prompt,                         collection_name=COLLECTION_NAME,                         video_id=st.session_state.current_video_id,                         language_code=st.session_state.selected_language,  # Utiliser la langue sélectionnée                         top_k=5                     )                     logger.info(f"Trouvé {len(retrieved_chunks)} chunks pertinents")                                  if not retrieved_chunks:                     full_response = "❌ Je n'ai trouvé aucune information pertinente dans la vidéo pour répondre à votre question."                     logger.info("Aucun chunk pertinent trouvé pour la requête")                 else:                     # Générer la réponse avec l'historique de conversation                     with st.spinner("🤖 Génération de la réponse..."):                         logger.info(f"Génération de réponse avec le modèle {selected_model}")                         full_response = answer_question_with_grok(                             question=prompt,                             chunks=retrieved_chunks,                             model=selected_model,                             max_tokens=st.session_state.max_tokens,                             temperature=st.session_state.temperature,                             conversation_history=st.session_state.messages                         )                         logger.info("Réponse générée avec succès")                          # Afficher la réponse progressivement (effet de frappe)             for chunk in full_response.split():                 full_response += chunk + " "                 time.sleep(0.05)                 message_placeholder.markdown(full_response + "▌")             message_placeholder.markdown(full_response)                      except Exception as e:             error_response = f"❌ Une erreur s'est produite: {str(e)}"             message_placeholder.markdown(error_response)             logger.error(f"Erreur lors de la génération de la réponse: {e}")             full_response = error_response          # Ajouter la réponse à l'historique     st.session_state.messages.append({"role": "assistant", "content": full_response})     logger.debug("Réponse ajoutée à l'historique")  # Bouton pour réinitialiser la conversation if st.sidebar.button("🗑️ Réinitialiser la conversation"):     logger.info("Réinitialisation de la conversation demandée")     st.session_state.messages = []     st.session_state.current_video_id = None     st.session_state.video_processed = False     st.session_state.selected_language = DEFAULT_LANGUAGE     st.session_state.available_languages = []     st.rerun()  logger.info("Fin du rendu de l'application Streamlit")
2025-08-19 13:05:47,038 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 13:05:47,049 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 13:05:47,056 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: # streamlit_app.py - Version complète mise à jour  import streamlit as st from src.youtube import extract_video_id, get_available_transcript_languages, save_txt_with_language from src.embedding import process_and_store_transcript_txt from src.qdrant import get_qdrant_client, check_video_exists from src.retrieve import retrieve_relevant_chunks from src.query import answer_question_with_grok from src.embedding import get_embedding_model from youtube_transcript_api import YouTubeTranscriptApi from src.loggings import configure_logging import os import time  # Configuration du logging logger = configure_logging(log_file="streamlit_app.log", logger_name="__streamlit_app__") logger.info("Démarrage de l'application Streamlit")  # Configuration de la page st.set_page_config(     page_title="Naive RAG YouTube",     page_icon="🎥",     layout="wide" )  # === CACHING DES MODELES === @st.cache_resource def load_embedding_model():     """Charge le modèle d'embedding au démarrage et le garde en cache"""     with st.spinner("Chargement du modèle d'embedding..."):         logger.info("Chargement du modèle d'embedding...")         model = get_embedding_model()         logger.info("Modèle d'embedding chargé avec succès")         return model  @st.cache_resource def get_qdrant_client_cached():     """Cache le client Qdrant"""     logger.info("Initialisation du client Qdrant...")     client = get_qdrant_client()     logger.info("Client Qdrant initialisé")     return client  # === CONSTANTES === COLLECTION_NAME = "youtube_transcripts" AVAILABLE_MODELS = [     "openai/gpt-oss-120b",     "openai/gpt-oss-20b",      "qwen/qwen3-32b" ] DEFAULT_MODEL = "openai/gpt-oss-120b" DEFAULT_TEMPERATURE = 0.7 DEFAULT_MAX_TOKENS = 1000 DEFAULT_LANGUAGE = "en"  # === INITIALISATION === if 'messages' not in st.session_state:     st.session_state.messages = []     logger.debug("Initialisation de st.session_state.messages") if 'current_video_id' not in st.session_state:     st.session_state.current_video_id = None     logger.debug("Initialisation de st.session_state.current_video_id") if 'video_processed' not in st.session_state:     st.session_state.video_processed = False     logger.debug("Initialisation de st.session_state.video_processed") if 'temperature' not in st.session_state:     st.session_state.temperature = DEFAULT_TEMPERATURE     logger.debug("Initialisation de st.session_state.temperature") if 'max_tokens' not in st.session_state:     st.session_state.max_tokens = DEFAULT_MAX_TOKENS     logger.debug("Initialisation de st.session_state.max_tokens") if 'selected_language' not in st.session_state:     st.session_state.selected_language = DEFAULT_LANGUAGE     logger.debug("Initialisation de st.session_state.selected_language") if 'available_languages' not in st.session_state:     st.session_state.available_languages = []     logger.debug("Initialisation de st.session_state.available_languages")  # Charger les modèles au démarrage try:     embedding_model = load_embedding_model()     qdrant_client = get_qdrant_client_cached()     ytt = YouTubeTranscriptApi()     logger.info("Tous les modèles et clients chargés avec succès") except Exception as e:     logger.error(f"Erreur lors du chargement des modèles/clients: {e}")     st.error("Erreur lors du chargement de l'application. Veuillez consulter les logs.")  # === SIDEBAR === with st.sidebar:     st.title("🎥 Naive RAG YouTube")     st.markdown("---")          # Input URL     youtube_url = st.text_input("🔗 URL YouTube", placeholder="https://www.youtube.com/watch?v=...")          # Afficher les langues disponibles une fois l'URL saisie     if youtube_url and st.session_state.available_languages:         language_options = {f"{lang['language']} ({lang['language_code']})": lang['language_code']                            for lang in st.session_state.available_languages}         selected_language_display = st.selectbox(             "🌍 Langue de transcription",             options=list(language_options.keys()),             index=0         )         st.session_state.selected_language = language_options[selected_language_display]                  # Afficher les détails sur la langue sélectionnée         selected_lang_info = next((lang for lang in st.session_state.available_languages                                   if lang['language_code'] == st.session_state.selected_language), None)         if selected_lang_info:             lang_type = "générée" if selected_lang_info['is_generated'] else "originale"             st.caption(f"Langue {lang_type}")          # Sélecteur de modèle     selected_model = st.selectbox(         "🤖 Modèle de réponse",         options=AVAILABLE_MODELS,         index=AVAILABLE_MODELS.index(DEFAULT_MODEL) if DEFAULT_MODEL in AVAILABLE_MODELS else 0     )          st.markdown("---")          # Paramètres de génération     st.subheader("⚙️ Paramètres de génération")     st.session_state.temperature = st.slider(         "Température",          min_value=0.0,          max_value=1.0,          value=float(st.session_state.temperature),          step=0.1,         help="Contrôle la créativité de la réponse (0 = déterministe, 1 = créatif)"     )          st.session_state.max_tokens = st.slider(         "Max Tokens",          min_value=100,          max_value=2000,          value=int(st.session_state.max_tokens),          step=100,         help="Longueur maximale de la réponse"     )          st.markdown("---")          if youtube_url:         logger.info(f"Traitement de l'URL YouTube: {youtube_url}")                  # Extraire l'ID et vérifier les langues disponibles         video_id = extract_video_id(youtube_url)         if video_id and not st.session_state.available_languages:             with st.spinner("🔍 Récupération des langues disponibles..."):                 st.session_state.available_languages = get_available_transcript_languages(video_id)                 if st.session_state.available_languages:                     st.success(f"✅ {len(st.session_state.available_languages)} langues trouvées")                 else:                     st.warning("⚠️ Aucune transcription disponible")                  if not video_id:             st.error("❌ URL YouTube invalide")             logger.warning(f"URL YouTube invalide fournie: {youtube_url}")         elif st.session_state.available_languages:             # Vérifier si la vidéo existe déjà avec la langue sélectionnée             logger.info(f"Vérification de l'existence de la vidéo {video_id} en {st.session_state.selected_language} dans Qdrant...")                          # Vérifier si la vidéo existe déjà             video_exists = check_video_exists(qdrant_client, COLLECTION_NAME, video_id)             if video_exists:                 # Vérifier si la langue spécifique existe                 try:                     count_result = qdrant_client.count(                         collection_name=COLLECTION_NAME,                         count_filter=models.Filter(                             must=[                                 models.FieldCondition(                                     key="video_id",                                     match=models.MatchValue(value=video_id)                                 ),                                 models.FieldCondition(                                     key="language",                                     match=models.MatchValue(value=st.session_state.selected_language)                                 )                             ]                         )                     )                     language_exists = count_result.count > 0                                          if language_exists:                         st.success(f"✅ Vidéo déjà traitée en {st.session_state.selected_language} (ID: {video_id})")                         logger.info(f"Vidéo {video_id} déjà présente en {st.session_state.selected_language} dans la base")                         st.session_state.current_video_id = video_id                         st.session_state.video_processed = True                     else:                         st.info(f"🔄 Vidéo traitée mais pas en {st.session_state.selected_language} - Lancement de l'ingestion...")                         logger.info(f"Vidéo {video_id} existe mais pas en {st.session_state.selected_language}")                         video_exists = False  # Forcer le traitement                 except Exception as e:                     logger.error(f"Erreur lors de la vérification de la langue: {e}")                     video_exists = False             else:                 st.info("🔄 Vidéo non traitée - Lancement de l'ingestion...")                 logger.info(f"Vidéo {video_id} non trouvée, démarrage de l'ingestion...")                          if not video_exists:                 # Processus d'ingestion                 try:                     with st.spinner("📥 Récupération de la transcription..."):                         logger.info(f"Récupération de la transcription pour {video_id} en {st.session_state.selected_language}")                         # Essayer d'abord la langue sélectionnée, sinon prendre la première disponible                         try:                             transcript = ytt.fetch(video_id=video_id, languages=[st.session_state.selected_language])                         except:                             # Si la langue spécifique n'est pas disponible, prendre la première                             first_lang = st.session_state.available_languages[0]['language_code']                             st.warning(f"Langue {st.session_state.selected_language} non disponible, utilisation de {first_lang}")                             st.session_state.selected_language = first_lang                             transcript = ytt.fetch(video_id=video_id, languages=[st.session_state.selected_language])                                                  logger.info(f"Transcription récupérée ({len(transcript)} segments)")                                          with st.spinner("💾 Sauvegarde de la transcription..."):                         logger.info(f"Sauvegarde de la transcription pour {video_id} en {st.session_state.selected_language}")                         os.makedirs("./downloads", exist_ok=True)                         txt_file_name = f"{video_id}_{st.session_state.selected_language}.txt"                         txt_file_path = f"./downloads/{txt_file_name}"                                                  try:                             save_txt_with_language(transcript, video_id, st.session_state.selected_language, txt_file_name)                             logger.info(f"Transcription sauvegardée dans {txt_file_path}")                         except Exception as e:                             logger.error(f"Erreur lors de la sauvegarde de la transcription pour {video_id}: {e}")                             raise                                          with st.spinner("🧠 Traitement et stockage dans Qdrant..."):                         logger.info(f"Traitement et stockage de {video_id} en {st.session_state.selected_language} dans Qdrant")                         process_and_store_transcript_txt(                             txt_file_path=txt_file_path,                             collection_name=COLLECTION_NAME,                             video_id=video_id,                             language_code=st.session_state.selected_language,                             chunk_size=700,                             chunk_overlap=100                         )                                              with st.spinner("🔍 Vérification du stockage..."):                         # Vérifier le stockage                         try:                             count_result = qdrant_client.count(                                 collection_name=COLLECTION_NAME,                                 count_filter=models.Filter(                                     must=[                                         models.FieldCondition(                                             key="video_id",                                             match=models.MatchValue(value=video_id)                                         ),                                         models.FieldCondition(                                             key="language",                                             match=models.MatchValue(value=st.session_state.selected_language)                                         )                                     ]                                 )                             )                             language_stored = count_result.count > 0                                                          if language_stored:                                 logger.info(f"Vidéo {video_id} en {st.session_state.selected_language} confirmée dans Qdrant")                                 st.success("✅ Vidéo traitée et stockée avec succès!")                                 st.session_state.current_video_id = video_id                                 st.session_state.video_processed = True                             else:                                 logger.warning(f"Vidéo {video_id} en {st.session_state.selected_language} non trouvée dans Qdrant après ingestion")                                 st.warning("⚠️ Problème lors du stockage")                                 st.session_state.video_processed = False                         except Exception as e:                             logger.error(f"Erreur lors de la vérification du stockage: {e}")                             st.session_state.video_processed = False                                      except Exception as e:                     error_msg = f"❌ Erreur lors du traitement: {str(e)}"                     st.error(error_msg)                     logger.error(f"Erreur lors du traitement de la vidéo {video_id}: {e}")                     st.session_state.video_processed = False  # === CHAT INTERFACE === st.title("💬 Chat avec votre vidéo YouTube")  # Afficher l'historique des messages logger.debug(f"Affichage de {len(st.session_state.messages)} messages dans l'historique") for message in st.session_state.messages:     with st.chat_message(message["role"]):         st.markdown(message["content"])  # Input utilisateur if prompt := st.chat_input("Posez votre question sur la vidéo...",                            disabled=not st.session_state.video_processed):          logger.info(f"Question utilisateur: {prompt}")     # Ajouter le message utilisateur     st.session_state.messages.append({"role": "user", "content": prompt})     with st.chat_message("user"):         st.markdown(prompt)          # Réponse de l'assistant     with st.chat_message("assistant"):         message_placeholder = st.empty()         full_response = ""                  try:             if not st.session_state.current_video_id:                 full_response = "❌ Aucune vidéo sélectionnée. Veuillez entrer une URL YouTube dans la sidebar."                 logger.warning("Tentative de question sans vidéo sélectionnée")             else:                 # Récupérer les chunks pertinents avec la langue sélectionnée                 with st.spinner("🔍 Recherche des informations pertinentes..."):                     logger.info(f"Recherche de chunks pertinents pour: {prompt}")                     retrieved_chunks = retrieve_relevant_chunks(                         query=prompt,                         collection_name=COLLECTION_NAME,                         video_id=st.session_state.current_video_id,                         language_code=st.session_state.selected_language,  # Utiliser la langue sélectionnée                         top_k=5                     )                     logger.info(f"Trouvé {len(retrieved_chunks)} chunks pertinents")                                  if not retrieved_chunks:                     full_response = "❌ Je n'ai trouvé aucune information pertinente dans la vidéo pour répondre à votre question."                     logger.info("Aucun chunk pertinent trouvé pour la requête")                 else:                     # Générer la réponse avec l'historique de conversation                     with st.spinner("🤖 Génération de la réponse..."):                         logger.info(f"Génération de réponse avec le modèle {selected_model}")                         full_response = answer_question_with_grok(                             question=prompt,                             chunks=retrieved_chunks,                             model=selected_model,                             max_tokens=st.session_state.max_tokens,                             temperature=st.session_state.temperature,                             conversation_history=st.session_state.messages                         )                         logger.info("Réponse générée avec succès")                          # Afficher la réponse progressivement (effet de frappe)             for chunk in full_response.split():                 full_response += chunk + " "                 time.sleep(0.05)                 message_placeholder.markdown(full_response + "▌")             message_placeholder.markdown(full_response)                      except Exception as e:             error_response = f"❌ Une erreur s'est produite: {str(e)}"             message_placeholder.markdown(error_response)             logger.error(f"Erreur lors de la génération de la réponse: {e}")             full_response = error_response          # Ajouter la réponse à l'historique     st.session_state.messages.append({"role": "assistant", "content": full_response})     logger.debug("Réponse ajoutée à l'historique")  # Bouton pour réinitialiser la conversation if st.sidebar.button("🗑️ Réinitialiser la conversation"):     logger.info("Réinitialisation de la conversation demandée")     st.session_state.messages = []     st.session_state.current_video_id = None     st.session_state.video_processed = False     st.session_state.selected_language = DEFAULT_LANGUAGE     st.session_state.available_languages = []     st.rerun()  logger.info("Fin du rendu de l'application Streamlit")
2025-08-19 13:05:47,061 - __youtube__ - INFO - Extracting video ID from URL: # streamlit_app.py - Version complète mise à jour  import streamlit as st from src.youtube import extract_video_id, get_available_transcript_languages, save_txt_with_language from src.embedding import process_and_store_transcript_txt from src.qdrant import get_qdrant_client, check_video_exists from src.retrieve import retrieve_relevant_chunks from src.query import answer_question_with_grok from src.embedding import get_embedding_model from youtube_transcript_api import YouTubeTranscriptApi from src.loggings import configure_logging import os import time  # Configuration du logging logger = configure_logging(log_file="streamlit_app.log", logger_name="__streamlit_app__") logger.info("Démarrage de l'application Streamlit")  # Configuration de la page st.set_page_config(     page_title="Naive RAG YouTube",     page_icon="🎥",     layout="wide" )  # === CACHING DES MODELES === @st.cache_resource def load_embedding_model():     """Charge le modèle d'embedding au démarrage et le garde en cache"""     with st.spinner("Chargement du modèle d'embedding..."):         logger.info("Chargement du modèle d'embedding...")         model = get_embedding_model()         logger.info("Modèle d'embedding chargé avec succès")         return model  @st.cache_resource def get_qdrant_client_cached():     """Cache le client Qdrant"""     logger.info("Initialisation du client Qdrant...")     client = get_qdrant_client()     logger.info("Client Qdrant initialisé")     return client  # === CONSTANTES === COLLECTION_NAME = "youtube_transcripts" AVAILABLE_MODELS = [     "openai/gpt-oss-120b",     "openai/gpt-oss-20b",      "qwen/qwen3-32b" ] DEFAULT_MODEL = "openai/gpt-oss-120b" DEFAULT_TEMPERATURE = 0.7 DEFAULT_MAX_TOKENS = 1000 DEFAULT_LANGUAGE = "en"  # === INITIALISATION === if 'messages' not in st.session_state:     st.session_state.messages = []     logger.debug("Initialisation de st.session_state.messages") if 'current_video_id' not in st.session_state:     st.session_state.current_video_id = None     logger.debug("Initialisation de st.session_state.current_video_id") if 'video_processed' not in st.session_state:     st.session_state.video_processed = False     logger.debug("Initialisation de st.session_state.video_processed") if 'temperature' not in st.session_state:     st.session_state.temperature = DEFAULT_TEMPERATURE     logger.debug("Initialisation de st.session_state.temperature") if 'max_tokens' not in st.session_state:     st.session_state.max_tokens = DEFAULT_MAX_TOKENS     logger.debug("Initialisation de st.session_state.max_tokens") if 'selected_language' not in st.session_state:     st.session_state.selected_language = DEFAULT_LANGUAGE     logger.debug("Initialisation de st.session_state.selected_language") if 'available_languages' not in st.session_state:     st.session_state.available_languages = []     logger.debug("Initialisation de st.session_state.available_languages")  # Charger les modèles au démarrage try:     embedding_model = load_embedding_model()     qdrant_client = get_qdrant_client_cached()     ytt = YouTubeTranscriptApi()     logger.info("Tous les modèles et clients chargés avec succès") except Exception as e:     logger.error(f"Erreur lors du chargement des modèles/clients: {e}")     st.error("Erreur lors du chargement de l'application. Veuillez consulter les logs.")  # === SIDEBAR === with st.sidebar:     st.title("🎥 Naive RAG YouTube")     st.markdown("---")          # Input URL     youtube_url = st.text_input("🔗 URL YouTube", placeholder="https://www.youtube.com/watch?v=...")          # Afficher les langues disponibles une fois l'URL saisie     if youtube_url and st.session_state.available_languages:         language_options = {f"{lang['language']} ({lang['language_code']})": lang['language_code']                            for lang in st.session_state.available_languages}         selected_language_display = st.selectbox(             "🌍 Langue de transcription",             options=list(language_options.keys()),             index=0         )         st.session_state.selected_language = language_options[selected_language_display]                  # Afficher les détails sur la langue sélectionnée         selected_lang_info = next((lang for lang in st.session_state.available_languages                                   if lang['language_code'] == st.session_state.selected_language), None)         if selected_lang_info:             lang_type = "générée" if selected_lang_info['is_generated'] else "originale"             st.caption(f"Langue {lang_type}")          # Sélecteur de modèle     selected_model = st.selectbox(         "🤖 Modèle de réponse",         options=AVAILABLE_MODELS,         index=AVAILABLE_MODELS.index(DEFAULT_MODEL) if DEFAULT_MODEL in AVAILABLE_MODELS else 0     )          st.markdown("---")          # Paramètres de génération     st.subheader("⚙️ Paramètres de génération")     st.session_state.temperature = st.slider(         "Température",          min_value=0.0,          max_value=1.0,          value=float(st.session_state.temperature),          step=0.1,         help="Contrôle la créativité de la réponse (0 = déterministe, 1 = créatif)"     )          st.session_state.max_tokens = st.slider(         "Max Tokens",          min_value=100,          max_value=2000,          value=int(st.session_state.max_tokens),          step=100,         help="Longueur maximale de la réponse"     )          st.markdown("---")          if youtube_url:         logger.info(f"Traitement de l'URL YouTube: {youtube_url}")                  # Extraire l'ID et vérifier les langues disponibles         video_id = extract_video_id(youtube_url)         if video_id and not st.session_state.available_languages:             with st.spinner("🔍 Récupération des langues disponibles..."):                 st.session_state.available_languages = get_available_transcript_languages(video_id)                 if st.session_state.available_languages:                     st.success(f"✅ {len(st.session_state.available_languages)} langues trouvées")                 else:                     st.warning("⚠️ Aucune transcription disponible")                  if not video_id:             st.error("❌ URL YouTube invalide")             logger.warning(f"URL YouTube invalide fournie: {youtube_url}")         elif st.session_state.available_languages:             # Vérifier si la vidéo existe déjà avec la langue sélectionnée             logger.info(f"Vérification de l'existence de la vidéo {video_id} en {st.session_state.selected_language} dans Qdrant...")                          # Vérifier si la vidéo existe déjà             video_exists = check_video_exists(qdrant_client, COLLECTION_NAME, video_id)             if video_exists:                 # Vérifier si la langue spécifique existe                 try:                     count_result = qdrant_client.count(                         collection_name=COLLECTION_NAME,                         count_filter=models.Filter(                             must=[                                 models.FieldCondition(                                     key="video_id",                                     match=models.MatchValue(value=video_id)                                 ),                                 models.FieldCondition(                                     key="language",                                     match=models.MatchValue(value=st.session_state.selected_language)                                 )                             ]                         )                     )                     language_exists = count_result.count > 0                                          if language_exists:                         st.success(f"✅ Vidéo déjà traitée en {st.session_state.selected_language} (ID: {video_id})")                         logger.info(f"Vidéo {video_id} déjà présente en {st.session_state.selected_language} dans la base")                         st.session_state.current_video_id = video_id                         st.session_state.video_processed = True                     else:                         st.info(f"🔄 Vidéo traitée mais pas en {st.session_state.selected_language} - Lancement de l'ingestion...")                         logger.info(f"Vidéo {video_id} existe mais pas en {st.session_state.selected_language}")                         video_exists = False  # Forcer le traitement                 except Exception as e:                     logger.error(f"Erreur lors de la vérification de la langue: {e}")                     video_exists = False             else:                 st.info("🔄 Vidéo non traitée - Lancement de l'ingestion...")                 logger.info(f"Vidéo {video_id} non trouvée, démarrage de l'ingestion...")                          if not video_exists:                 # Processus d'ingestion                 try:                     with st.spinner("📥 Récupération de la transcription..."):                         logger.info(f"Récupération de la transcription pour {video_id} en {st.session_state.selected_language}")                         # Essayer d'abord la langue sélectionnée, sinon prendre la première disponible                         try:                             transcript = ytt.fetch(video_id=video_id, languages=[st.session_state.selected_language])                         except:                             # Si la langue spécifique n'est pas disponible, prendre la première                             first_lang = st.session_state.available_languages[0]['language_code']                             st.warning(f"Langue {st.session_state.selected_language} non disponible, utilisation de {first_lang}")                             st.session_state.selected_language = first_lang                             transcript = ytt.fetch(video_id=video_id, languages=[st.session_state.selected_language])                                                  logger.info(f"Transcription récupérée ({len(transcript)} segments)")                                          with st.spinner("💾 Sauvegarde de la transcription..."):                         logger.info(f"Sauvegarde de la transcription pour {video_id} en {st.session_state.selected_language}")                         os.makedirs("./downloads", exist_ok=True)                         txt_file_name = f"{video_id}_{st.session_state.selected_language}.txt"                         txt_file_path = f"./downloads/{txt_file_name}"                                                  try:                             save_txt_with_language(transcript, video_id, st.session_state.selected_language, txt_file_name)                             logger.info(f"Transcription sauvegardée dans {txt_file_path}")                         except Exception as e:                             logger.error(f"Erreur lors de la sauvegarde de la transcription pour {video_id}: {e}")                             raise                                          with st.spinner("🧠 Traitement et stockage dans Qdrant..."):                         logger.info(f"Traitement et stockage de {video_id} en {st.session_state.selected_language} dans Qdrant")                         process_and_store_transcript_txt(                             txt_file_path=txt_file_path,                             collection_name=COLLECTION_NAME,                             video_id=video_id,                             language_code=st.session_state.selected_language,                             chunk_size=700,                             chunk_overlap=100                         )                                              with st.spinner("🔍 Vérification du stockage..."):                         # Vérifier le stockage                         try:                             count_result = qdrant_client.count(                                 collection_name=COLLECTION_NAME,                                 count_filter=models.Filter(                                     must=[                                         models.FieldCondition(                                             key="video_id",                                             match=models.MatchValue(value=video_id)                                         ),                                         models.FieldCondition(                                             key="language",                                             match=models.MatchValue(value=st.session_state.selected_language)                                         )                                     ]                                 )                             )                             language_stored = count_result.count > 0                                                          if language_stored:                                 logger.info(f"Vidéo {video_id} en {st.session_state.selected_language} confirmée dans Qdrant")                                 st.success("✅ Vidéo traitée et stockée avec succès!")                                 st.session_state.current_video_id = video_id                                 st.session_state.video_processed = True                             else:                                 logger.warning(f"Vidéo {video_id} en {st.session_state.selected_language} non trouvée dans Qdrant après ingestion")                                 st.warning("⚠️ Problème lors du stockage")                                 st.session_state.video_processed = False                         except Exception as e:                             logger.error(f"Erreur lors de la vérification du stockage: {e}")                             st.session_state.video_processed = False                                      except Exception as e:                     error_msg = f"❌ Erreur lors du traitement: {str(e)}"                     st.error(error_msg)                     logger.error(f"Erreur lors du traitement de la vidéo {video_id}: {e}")                     st.session_state.video_processed = False  # === CHAT INTERFACE === st.title("💬 Chat avec votre vidéo YouTube")  # Afficher l'historique des messages logger.debug(f"Affichage de {len(st.session_state.messages)} messages dans l'historique") for message in st.session_state.messages:     with st.chat_message(message["role"]):         st.markdown(message["content"])  # Input utilisateur if prompt := st.chat_input("Posez votre question sur la vidéo...",                            disabled=not st.session_state.video_processed):          logger.info(f"Question utilisateur: {prompt}")     # Ajouter le message utilisateur     st.session_state.messages.append({"role": "user", "content": prompt})     with st.chat_message("user"):         st.markdown(prompt)          # Réponse de l'assistant     with st.chat_message("assistant"):         message_placeholder = st.empty()         full_response = ""                  try:             if not st.session_state.current_video_id:                 full_response = "❌ Aucune vidéo sélectionnée. Veuillez entrer une URL YouTube dans la sidebar."                 logger.warning("Tentative de question sans vidéo sélectionnée")             else:                 # Récupérer les chunks pertinents avec la langue sélectionnée                 with st.spinner("🔍 Recherche des informations pertinentes..."):                     logger.info(f"Recherche de chunks pertinents pour: {prompt}")                     retrieved_chunks = retrieve_relevant_chunks(                         query=prompt,                         collection_name=COLLECTION_NAME,                         video_id=st.session_state.current_video_id,                         language_code=st.session_state.selected_language,  # Utiliser la langue sélectionnée                         top_k=5                     )                     logger.info(f"Trouvé {len(retrieved_chunks)} chunks pertinents")                                  if not retrieved_chunks:                     full_response = "❌ Je n'ai trouvé aucune information pertinente dans la vidéo pour répondre à votre question."                     logger.info("Aucun chunk pertinent trouvé pour la requête")                 else:                     # Générer la réponse avec l'historique de conversation                     with st.spinner("🤖 Génération de la réponse..."):                         logger.info(f"Génération de réponse avec le modèle {selected_model}")                         full_response = answer_question_with_grok(                             question=prompt,                             chunks=retrieved_chunks,                             model=selected_model,                             max_tokens=st.session_state.max_tokens,                             temperature=st.session_state.temperature,                             conversation_history=st.session_state.messages                         )                         logger.info("Réponse générée avec succès")                          # Afficher la réponse progressivement (effet de frappe)             for chunk in full_response.split():                 full_response += chunk + " "                 time.sleep(0.05)                 message_placeholder.markdown(full_response + "▌")             message_placeholder.markdown(full_response)                      except Exception as e:             error_response = f"❌ Une erreur s'est produite: {str(e)}"             message_placeholder.markdown(error_response)             logger.error(f"Erreur lors de la génération de la réponse: {e}")             full_response = error_response          # Ajouter la réponse à l'historique     st.session_state.messages.append({"role": "assistant", "content": full_response})     logger.debug("Réponse ajoutée à l'historique")  # Bouton pour réinitialiser la conversation if st.sidebar.button("🗑️ Réinitialiser la conversation"):     logger.info("Réinitialisation de la conversation demandée")     st.session_state.messages = []     st.session_state.current_video_id = None     st.session_state.video_processed = False     st.session_state.selected_language = DEFAULT_LANGUAGE     st.session_state.available_languages = []     st.rerun()  logger.info("Fin du rendu de l'application Streamlit")
2025-08-19 13:05:52,687 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 13:05:52,698 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 13:05:52,705 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 13:05:52,706 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=WMeOZAHusGQ
2025-08-19 13:05:52,707 - __youtube__ - ERROR - Erreur lors de la récupération des langues pour WMeOZAHusGQ: type object 'YouTubeTranscriptApi' has no attribute 'list_transcripts'
2025-08-19 13:05:52,710 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 13:06:45,153 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 13:06:45,167 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 13:06:45,171 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7kr
2025-08-19 13:06:45,171 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7kr
2025-08-19 13:06:45,172 - __youtube__ - ERROR - Erreur lors de la récupération des langues pour OLXkGB7kr: type object 'YouTubeTranscriptApi' has no attribute 'list_transcripts'
2025-08-19 13:06:45,174 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 13:10:44,211 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 13:10:44,219 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 13:10:44,229 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7kr
2025-08-19 13:10:44,229 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7kr
2025-08-19 13:10:44,232 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7kr en en dans Qdrant...
2025-08-19 13:10:44,642 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 404 Not Found"
2025-08-19 13:10:44,649 - __qdrant__ - ERROR - Error checking existence of video OLXkGB7kr: Unexpected Response: 404 (Not Found)
Raw response content:
b'{"status":{"error":"Not found: Collection `youtube_transcripts` doesn\'t exist!"},"time":0.000016825}'
2025-08-19 13:10:44,652 - __streamlit_app__ - INFO - Vidéo OLXkGB7kr non trouvée, démarrage de l'ingestion...
2025-08-19 13:10:44,653 - __streamlit_app__ - INFO - Récupération de la transcription pour OLXkGB7kr en en
2025-08-19 13:10:46,154 - __streamlit_app__ - ERROR - Erreur lors du traitement de la vidéo OLXkGB7kr: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=OLXkGB7kr! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-08-19 13:10:46,158 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 13:10:54,991 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 13:10:54,998 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 13:10:55,017 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 13:10:57,581 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 13:10:57,585 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 13:10:57,590 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7kr
2025-08-19 13:10:57,590 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7kr
2025-08-19 13:10:57,592 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7kr en en dans Qdrant...
2025-08-19 13:10:57,978 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 404 Not Found"
2025-08-19 13:10:57,980 - __qdrant__ - ERROR - Error checking existence of video OLXkGB7kr: Unexpected Response: 404 (Not Found)
Raw response content:
b'{"status":{"error":"Not found: Collection `youtube_transcripts` doesn\'t exist!"},"time":4.564e-6}'
2025-08-19 13:10:57,981 - __streamlit_app__ - INFO - Vidéo OLXkGB7kr non trouvée, démarrage de l'ingestion...
2025-08-19 13:10:57,982 - __streamlit_app__ - INFO - Récupération de la transcription pour OLXkGB7kr en en
2025-08-19 13:10:59,426 - __streamlit_app__ - ERROR - Erreur lors du traitement de la vidéo OLXkGB7kr: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=OLXkGB7kr! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-08-19 13:10:59,428 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 13:15:16,749 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 13:15:16,769 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 13:15:16,778 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7kr
2025-08-19 13:15:16,778 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7kr
2025-08-19 13:15:16,778 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7kr dans Qdrant...
2025-08-19 13:15:17,464 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 404 Not Found"
2025-08-19 13:15:17,490 - __qdrant__ - ERROR - Error checking existence of video OLXkGB7kr: Unexpected Response: 404 (Not Found)
Raw response content:
b'{"status":{"error":"Not found: Collection `youtube_transcripts` doesn\'t exist!"},"time":6.235e-6}'
2025-08-19 13:15:17,491 - __streamlit_app__ - INFO - Vidéo OLXkGB7kr non trouvée, démarrage de l'ingestion...
2025-08-19 13:15:17,492 - __streamlit_app__ - INFO - Récupération de la transcription pour OLXkGB7kr
2025-08-19 13:15:18,610 - __streamlit_app__ - ERROR - Erreur lors du traitement de la vidéo OLXkGB7kr: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=OLXkGB7kr! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-08-19 13:15:18,615 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 13:15:32,320 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 13:15:32,323 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 13:15:32,328 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 13:15:34,494 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 13:15:34,497 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 13:15:34,501 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7kr
2025-08-19 13:15:34,501 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7kr
2025-08-19 13:15:34,502 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7kr dans Qdrant...
2025-08-19 13:15:34,905 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 404 Not Found"
2025-08-19 13:15:34,907 - __qdrant__ - ERROR - Error checking existence of video OLXkGB7kr: Unexpected Response: 404 (Not Found)
Raw response content:
b'{"status":{"error":"Not found: Collection `youtube_transcripts` doesn\'t exist!"},"time":7.236e-6}'
2025-08-19 13:15:34,908 - __streamlit_app__ - INFO - Vidéo OLXkGB7kr non trouvée, démarrage de l'ingestion...
2025-08-19 13:15:34,910 - __streamlit_app__ - INFO - Récupération de la transcription pour OLXkGB7kr
2025-08-19 13:15:36,122 - __streamlit_app__ - ERROR - Erreur lors du traitement de la vidéo OLXkGB7kr: 
Could not retrieve a transcript for the video https://www.youtube.com/watch?v=OLXkGB7kr! This is most likely caused by:

The video is no longer available

If you are sure that the described cause is not responsible for this error and that a transcript should be retrievable, please create an issue at https://github.com/jdepoix/youtube-transcript-api/issues. Please add which version of youtube_transcript_api you are using and provide the information needed to replicate the error. Also make sure that there are no open issues which already describe your problem!
2025-08-19 13:15:36,124 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 13:19:48,128 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 13:19:48,132 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 13:20:19,988 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 13:20:19,990 - __streamlit_app__ - INFO - Chargement du modèle d'embedding...
2025-08-19 13:20:19,991 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 13:20:20,000 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 13:20:20,000 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 13:20:27,290 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 13:20:27,292 - __streamlit_app__ - INFO - Modèle d'embedding chargé avec succès
2025-08-19 13:20:27,298 - __streamlit_app__ - INFO - Initialisation du client Qdrant...
2025-08-19 13:20:27,762 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 13:20:28,176 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 13:20:28,211 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[]
2025-08-19 13:20:28,211 - __streamlit_app__ - INFO - Client Qdrant initialisé
2025-08-19 13:20:28,212 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:38:05,473 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:38:05,494 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:38:05,505 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 14:38:27,143 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:38:27,152 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:38:27,155 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:38:27,156 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:38:27,156 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7krGo dans Qdrant...
2025-08-19 14:38:28,780 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 404 Not Found"
2025-08-19 14:38:28,792 - __qdrant__ - ERROR - Error checking existence of video OLXkGB7krGo: Unexpected Response: 404 (Not Found)
Raw response content:
b'{"status":{"error":"Not found: Collection `youtube_transcripts` doesn\'t exist!"},"time":4.767e-6}'
2025-08-19 14:38:28,793 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo non trouvée, démarrage de l'ingestion...
2025-08-19 14:38:28,794 - __streamlit_app__ - INFO - Récupération de la transcription pour OLXkGB7krGo
2025-08-19 14:38:30,283 - __streamlit_app__ - INFO - Transcription récupérée (706 segments)
2025-08-19 14:38:30,284 - __streamlit_app__ - INFO - Sauvegarde de la transcription pour OLXkGB7krGo
2025-08-19 14:38:30,285 - __youtube__ - INFO - Saving TXT to OLXkGB7krGo.txt
2025-08-19 14:38:30,286 - __youtube__ - INFO - Saved TXT to ../downloads/OLXkGB7krGo.txt
2025-08-19 14:38:30,287 - __streamlit_app__ - INFO - Transcription sauvegardée dans ./downloads/OLXkGB7krGo.txt
2025-08-19 14:38:30,288 - __streamlit_app__ - INFO - Traitement et stockage de OLXkGB7krGo dans Qdrant
2025-08-19 14:38:30,288 - __embedding__ - INFO - Starting processing for TXT file: ./downloads/OLXkGB7krGo.txt
2025-08-19 14:38:30,289 - __embedding__ - INFO - Loaded text from ./downloads/OLXkGB7krGo.txt, length: 22199 chars
2025-08-19 14:38:30,289 - __embedding__ - INFO - Splitting text into chunks (size=700, overlap=100)
2025-08-19 14:38:30,292 - __embedding__ - INFO - Text split into 37 chunks
2025-08-19 14:38:30,293 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 14:38:30,296 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 14:38:30,296 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 14:38:38,917 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 14:38:38,923 - __embedding__ - INFO - Embedding 37 text chunks
2025-08-19 14:38:41,340 - __embedding__ - INFO - Embedded 37 text chunks
2025-08-19 14:38:41,796 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 14:38:42,177 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 14:38:42,179 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[]
2025-08-19 14:38:42,306 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 14:38:42,306 - __qdrant__ - INFO - Creating collection 'youtube_transcripts' with vector size 768 and distance Cosine
2025-08-19 14:38:42,616 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts "HTTP/1.1 200 OK"
2025-08-19 14:38:42,625 - __qdrant__ - INFO - Creating index on payload field 'video_id'
2025-08-19 14:38:42,844 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/index?wait=true "HTTP/1.1 200 OK"
2025-08-19 14:38:42,851 - __qdrant__ - INFO - Creating index on payload field 'language'
2025-08-19 14:38:43,087 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/index?wait=true "HTTP/1.1 200 OK"
2025-08-19 14:38:43,088 - __qdrant__ - INFO - Upserting 37 points into collection 'youtube_transcripts'
2025-08-19 14:38:43,879 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points?wait=true "HTTP/1.1 200 OK"
2025-08-19 14:38:43,880 - __qdrant__ - INFO - Successfully upserted points into collection 'youtube_transcripts'
2025-08-19 14:38:43,880 - __embedding__ - INFO - Finished processing and storing 37 chunks from ./downloads/OLXkGB7krGo.txt
2025-08-19 14:38:44,345 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 14:38:44,350 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo confirmée dans Qdrant
2025-08-19 14:38:44,353 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 14:39:08,376 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:39:08,387 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:39:08,395 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:39:08,395 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:39:08,395 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7krGo dans Qdrant...
2025-08-19 14:39:08,824 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 14:39:08,829 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo déjà présente dans la base
2025-08-19 14:39:08,831 - __streamlit_app__ - INFO - Question utilisateur: De quoi parle la vidéo ?
2025-08-19 14:39:08,836 - __streamlit_app__ - INFO - Recherche de chunks pertinents pour: De quoi parle la vidéo ?
2025-08-19 14:39:08,837 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-19 14:39:08,837 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 14:39:08,853 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 14:39:08,854 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 14:39:13,867 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 14:39:14,497 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 14:39:14,868 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 14:39:14,872 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 14:39:14,872 - __retrieve__ - INFO - Application du filtre pour la vidéo : OLXkGB7krGo
2025-08-19 14:39:14,873 - __retrieve__ - INFO - Application du filtre pour la langue : en
2025-08-19 14:39:14,873 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-19 14:39:15,127 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-19 14:39:15,141 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-19 14:39:15,143 - __streamlit_app__ - INFO - Trouvé 0 chunks pertinents
2025-08-19 14:39:15,147 - __streamlit_app__ - INFO - Aucun chunk pertinent trouvé pour la requête
2025-08-19 14:39:15,965 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 14:41:01,986 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:41:01,999 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:41:02,007 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 14:41:04,355 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:41:04,357 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:41:04,361 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:41:04,361 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:41:04,361 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7krGo dans Qdrant...
2025-08-19 14:41:04,770 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 404 Not Found"
2025-08-19 14:41:04,775 - __qdrant__ - ERROR - Error checking existence of video OLXkGB7krGo: Unexpected Response: 404 (Not Found)
Raw response content:
b'{"status":{"error":"Not found: Collection `youtube_transcripts` doesn\'t exist!"},"time":4.058e-6}'
2025-08-19 14:41:04,778 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo non trouvée, démarrage de l'ingestion...
2025-08-19 14:41:04,780 - __streamlit_app__ - INFO - Récupération de la transcription pour OLXkGB7krGo
2025-08-19 14:41:06,571 - __streamlit_app__ - INFO - Transcription récupérée (706 segments)
2025-08-19 14:41:06,573 - __streamlit_app__ - INFO - Sauvegarde de la transcription pour OLXkGB7krGo
2025-08-19 14:41:06,573 - __youtube__ - INFO - Saving TXT to OLXkGB7krGo.txt
2025-08-19 14:41:06,577 - __youtube__ - INFO - Saved TXT to ../downloads/OLXkGB7krGo.txt
2025-08-19 14:41:06,577 - __streamlit_app__ - INFO - Transcription sauvegardée dans ./downloads/OLXkGB7krGo.txt
2025-08-19 14:41:06,578 - __streamlit_app__ - INFO - Traitement et stockage de OLXkGB7krGo dans Qdrant
2025-08-19 14:41:06,579 - __embedding__ - INFO - Starting processing for TXT file: ./downloads/OLXkGB7krGo.txt
2025-08-19 14:41:06,579 - __embedding__ - INFO - Loaded text from ./downloads/OLXkGB7krGo.txt, length: 22199 chars
2025-08-19 14:41:06,580 - __embedding__ - INFO - Splitting text into chunks (size=700, overlap=100)
2025-08-19 14:41:06,582 - __embedding__ - INFO - Text split into 37 chunks
2025-08-19 14:41:06,582 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 14:41:06,588 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 14:41:06,588 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 14:41:12,822 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 14:41:12,823 - __embedding__ - INFO - Embedding 37 text chunks
2025-08-19 14:41:14,965 - __embedding__ - INFO - Embedded 37 text chunks
2025-08-19 14:41:15,423 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 14:41:15,805 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 14:41:15,806 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[]
2025-08-19 14:41:16,085 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 14:41:16,086 - __qdrant__ - INFO - Creating collection 'youtube_transcripts' with vector size 768 and distance Cosine
2025-08-19 14:41:16,413 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts "HTTP/1.1 200 OK"
2025-08-19 14:41:16,414 - __qdrant__ - INFO - Creating index on payload field 'video_id'
2025-08-19 14:41:16,639 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/index?wait=true "HTTP/1.1 200 OK"
2025-08-19 14:41:16,640 - __qdrant__ - INFO - Creating index on payload field 'language'
2025-08-19 14:41:16,935 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/index?wait=true "HTTP/1.1 200 OK"
2025-08-19 14:41:16,971 - __qdrant__ - INFO - Upserting 37 points into collection 'youtube_transcripts'
2025-08-19 14:41:17,759 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points?wait=true "HTTP/1.1 200 OK"
2025-08-19 14:41:17,760 - __qdrant__ - INFO - Successfully upserted points into collection 'youtube_transcripts'
2025-08-19 14:41:17,760 - __embedding__ - INFO - Finished processing and storing 37 chunks from ./downloads/OLXkGB7krGo.txt
2025-08-19 14:41:18,169 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 14:41:18,170 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo confirmée dans Qdrant
2025-08-19 14:41:18,178 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 14:41:58,147 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:41:58,157 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:41:58,162 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:41:58,163 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:41:58,164 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7krGo dans Qdrant...
2025-08-19 14:41:58,717 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 14:41:58,725 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo déjà présente dans la base
2025-08-19 14:41:58,728 - __streamlit_app__ - INFO - Question utilisateur: De quoi palrle la vidéo ?
2025-08-19 14:41:58,730 - __streamlit_app__ - INFO - Recherche de chunks pertinents pour: De quoi palrle la vidéo ?
2025-08-19 14:41:58,731 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi palrle la vidéo ?'
2025-08-19 14:41:58,731 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 14:41:58,736 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 14:41:58,736 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 14:42:04,513 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 14:42:06,463 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 14:42:06,853 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 14:42:06,858 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 14:42:06,859 - __retrieve__ - INFO - Application du filtre pour la vidéo : OLXkGB7krGo
2025-08-19 14:42:06,859 - __retrieve__ - INFO - Application du filtre pour la langue : en
2025-08-19 14:42:06,860 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-19 14:42:07,105 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-19 14:42:07,107 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-19 14:42:07,109 - __streamlit_app__ - INFO - Trouvé 0 chunks pertinents
2025-08-19 14:42:07,114 - __streamlit_app__ - INFO - Aucun chunk pertinent trouvé pour la requête
2025-08-19 14:42:07,955 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 14:42:47,659 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:42:47,672 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:42:47,680 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:42:47,682 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:42:47,683 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7krGo dans Qdrant...
2025-08-19 14:42:48,096 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 14:42:48,100 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo déjà présente dans la base
2025-08-19 14:42:48,104 - __streamlit_app__ - INFO - Question utilisateur: Ah bon ?
2025-08-19 14:42:48,107 - __streamlit_app__ - INFO - Recherche de chunks pertinents pour: Ah bon ?
2025-08-19 14:42:48,107 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'Ah bon ?'
2025-08-19 14:42:48,107 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 14:42:48,111 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 14:42:48,111 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 14:42:53,044 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 14:42:54,175 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 14:42:54,575 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 14:42:54,577 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 14:42:54,577 - __retrieve__ - INFO - Application du filtre pour la vidéo : OLXkGB7krGo
2025-08-19 14:42:54,577 - __retrieve__ - INFO - Application du filtre pour la langue : en
2025-08-19 14:42:54,577 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-19 14:42:54,840 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-19 14:42:54,841 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-19 14:42:54,842 - __streamlit_app__ - INFO - Trouvé 0 chunks pertinents
2025-08-19 14:42:54,846 - __streamlit_app__ - INFO - Aucun chunk pertinent trouvé pour la requête
2025-08-19 14:42:55,665 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 14:44:09,851 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:44:09,866 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:44:09,878 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:44:09,878 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:44:09,879 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7krGo dans Qdrant...
2025-08-19 14:44:10,300 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 14:44:10,308 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo déjà présente dans la base
2025-08-19 14:44:10,318 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 14:44:13,128 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:44:13,134 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:44:13,139 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:44:13,139 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:44:13,140 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7krGo dans Qdrant...
2025-08-19 14:44:13,292 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 14:44:13,296 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo déjà présente dans la base
2025-08-19 14:44:13,305 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 14:44:38,873 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:44:38,877 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:44:38,881 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:44:38,882 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:44:38,882 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7krGo dans Qdrant...
2025-08-19 14:44:39,290 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 14:44:39,293 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo déjà présente dans la base
2025-08-19 14:44:39,303 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 14:44:45,412 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:44:45,418 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:44:45,423 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:44:45,424 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:44:45,424 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7krGo dans Qdrant...
2025-08-19 14:44:45,809 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 14:44:45,811 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo déjà présente dans la base
2025-08-19 14:44:45,818 - __streamlit_app__ - INFO - Question utilisateur: ??
2025-08-19 14:44:45,821 - __streamlit_app__ - INFO - Recherche de chunks pertinents pour: ??
2025-08-19 14:44:45,821 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : '??'
2025-08-19 14:44:45,822 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 14:44:45,834 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 14:44:45,835 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 14:44:51,103 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 14:44:52,470 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 14:44:52,841 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 14:44:52,843 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 14:44:52,843 - __retrieve__ - INFO - Application du filtre pour la vidéo : OLXkGB7krGo
2025-08-19 14:44:52,844 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-19 14:44:53,084 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-19 14:44:53,094 - __retrieve__ - INFO - Retrieved 10 relevant chunks.
2025-08-19 14:44:53,095 - __streamlit_app__ - INFO - Trouvé 10 chunks pertinents
2025-08-19 14:44:53,098 - __streamlit_app__ - INFO - Génération de réponse avec le modèle openai/gpt-oss-120b
2025-08-19 14:44:53,098 - __query__ - INFO - Construction du prompt pour la question: 'Réponds en Français: ??'
2025-08-19 14:44:53,099 - __query__ - INFO - Appel à Grok pour générer la réponse...
2025-08-19 14:44:53,099 - __grok__ - INFO - Generating answer with Groq model 'openai/gpt-oss-120b'
2025-08-19 14:44:53,116 - __grok__ - INFO - Groq client created
2025-08-19 14:44:54,481 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-19 14:44:54,505 - __grok__ - INFO - Answer generated successfully.
2025-08-19 14:44:54,505 - __query__ - INFO - Réponse générée avec succès.
2025-08-19 14:44:57,248 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 14:45:00,113 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:45:00,115 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:45:00,124 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:45:00,125 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:45:00,125 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7krGo dans Qdrant...
2025-08-19 14:45:00,512 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 14:45:00,514 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo déjà présente dans la base
2025-08-19 14:45:00,522 - __streamlit_app__ - INFO - Réinitialisation de la conversation demandée
2025-08-19 14:45:00,638 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:45:00,638 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:45:00,640 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:45:00,640 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:45:00,640 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7krGo dans Qdrant...
2025-08-19 14:45:00,769 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 14:45:00,770 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo déjà présente dans la base
2025-08-19 14:45:00,772 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 14:45:11,650 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:45:11,659 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:45:11,668 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:45:11,669 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:45:11,669 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7krGo dans Qdrant...
2025-08-19 14:45:12,059 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 14:45:12,065 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo déjà présente dans la base
2025-08-19 14:45:12,069 - __streamlit_app__ - INFO - Question utilisateur: Dis moi de qioi parle la vidéo 
2025-08-19 14:45:12,072 - __streamlit_app__ - INFO - Recherche de chunks pertinents pour: Dis moi de qioi parle la vidéo 
2025-08-19 14:45:12,073 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'Dis moi de qioi parle la vidéo '
2025-08-19 14:45:12,073 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 14:45:12,077 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 14:45:12,078 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 14:45:17,411 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 14:45:18,466 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 14:45:18,847 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 14:45:18,851 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 14:45:18,851 - __retrieve__ - INFO - Application du filtre pour la vidéo : OLXkGB7krGo
2025-08-19 14:45:18,851 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-19 14:45:19,094 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-19 14:45:19,096 - __retrieve__ - INFO - Retrieved 10 relevant chunks.
2025-08-19 14:45:19,098 - __streamlit_app__ - INFO - Trouvé 10 chunks pertinents
2025-08-19 14:45:19,104 - __streamlit_app__ - INFO - Génération de réponse avec le modèle openai/gpt-oss-120b
2025-08-19 14:45:19,104 - __query__ - INFO - Construction du prompt pour la question: 'Réponds en Français: Dis moi de qioi parle la vidéo '
2025-08-19 14:45:19,105 - __query__ - INFO - Appel à Grok pour générer la réponse...
2025-08-19 14:45:19,105 - __grok__ - INFO - Generating answer with Groq model 'openai/gpt-oss-120b'
2025-08-19 14:45:19,122 - __grok__ - INFO - Groq client created
2025-08-19 14:45:21,313 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-19 14:45:21,318 - __grok__ - INFO - Answer generated successfully.
2025-08-19 14:45:21,318 - __query__ - INFO - Réponse générée avec succès.
2025-08-19 14:45:41,628 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 14:45:56,576 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:45:56,585 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:45:56,589 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:45:56,589 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:45:56,590 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7krGo dans Qdrant...
2025-08-19 14:45:57,007 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 14:45:57,017 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo déjà présente dans la base
2025-08-19 14:45:57,023 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-19 14:46:30,175 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-19 14:46:30,182 - __streamlit_app__ - INFO - Tous les modèles et clients chargés avec succès
2025-08-19 14:46:30,190 - __streamlit_app__ - INFO - Traitement de l'URL YouTube: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:46:30,190 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=OLXkGB7krGo
2025-08-19 14:46:30,190 - __streamlit_app__ - INFO - Vérification de l'existence de la vidéo OLXkGB7krGo dans Qdrant...
2025-08-19 14:46:30,591 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-19 14:46:30,594 - __streamlit_app__ - INFO - Vidéo OLXkGB7krGo déjà présente dans la base
2025-08-19 14:46:30,600 - __streamlit_app__ - INFO - Question utilisateur: Bien. Que penses tu de l'architecture choisie par le présentateur ?
2025-08-19 14:46:30,603 - __streamlit_app__ - INFO - Recherche de chunks pertinents pour: Bien. Que penses tu de l'architecture choisie par le présentateur ?
2025-08-19 14:46:30,603 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'Bien. Que penses tu de l'architecture choisie par le présentateur ?'
2025-08-19 14:46:30,604 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-19 14:46:30,610 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-19 14:46:30,610 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-19 14:46:35,658 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-19 14:46:36,420 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-19 14:46:36,795 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-19 14:46:36,799 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='youtube_transcripts')]
2025-08-19 14:46:36,800 - __retrieve__ - INFO - Application du filtre pour la vidéo : OLXkGB7krGo
2025-08-19 14:46:36,800 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-19 14:46:37,042 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-19 14:46:37,044 - __retrieve__ - INFO - Retrieved 10 relevant chunks.
2025-08-19 14:46:37,046 - __streamlit_app__ - INFO - Trouvé 10 chunks pertinents
2025-08-19 14:46:37,051 - __streamlit_app__ - INFO - Génération de réponse avec le modèle qwen/qwen3-32b
2025-08-19 14:46:37,052 - __query__ - INFO - Construction du prompt pour la question: 'Réponds en Français: Bien. Que penses tu de l'architecture choisie par le présentateur ?'
2025-08-19 14:46:37,052 - __query__ - INFO - Appel à Grok pour générer la réponse...
2025-08-19 14:46:37,053 - __grok__ - INFO - Generating answer with Groq model 'qwen/qwen3-32b'
2025-08-19 14:46:37,069 - __grok__ - INFO - Groq client created
2025-08-19 14:46:41,798 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-19 14:46:41,804 - __grok__ - INFO - Answer generated successfully.
2025-08-19 14:46:41,805 - __query__ - INFO - Réponse générée avec succès.
2025-08-19 14:47:13,296 - __streamlit_app__ - INFO - Fin du rendu de l'application Streamlit
2025-08-21 11:31:37,775 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:31:37,879 - __mongo__ - INFO - Connexion à MongoDB: mongodb+srv://reporting:ChNNKat9xpZpPOYg@cluster0.z4sob.mongodb.net/
2025-08-21 11:31:41,128 - __mongo__ - INFO - Connexion MongoDB établie avec succès
2025-08-21 11:31:41,273 - __streamlit_app__ - INFO - ConversationManager initialisé
2025-08-21 11:31:41,447 - __streamlit_app__ - INFO - Initialisation du client Qdrant...
2025-08-21 11:31:43,728 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:31:44,127 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:31:44,131 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:31:44,132 - __streamlit_app__ - INFO - Client Qdrant initialisé
2025-08-21 11:31:44,147 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:31:44,153 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:31:51,033 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:31:51,039 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:31:51,049 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:31:51,050 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:31:51,050 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoI in Qdrant...
2025-08-21 11:31:51,479 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:31:51,488 - __streamlit_app__ - INFO - Video s3F1a1yUQoI already exists in the database
2025-08-21 11:31:51,490 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:31:52,414 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:31:52,428 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:31:52,450 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:31:52,451 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:31:52,453 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoI in Qdrant...
2025-08-21 11:31:52,585 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:31:52,588 - __streamlit_app__ - INFO - Video s3F1a1yUQoI already exists in the database
2025-08-21 11:31:52,598 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:32:22,028 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:32:22,037 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:32:22,047 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:32:22,047 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:32:22,048 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoI in Qdrant...
2025-08-21 11:32:22,469 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:32:22,471 - __streamlit_app__ - INFO - Video s3F1a1yUQoI already exists in the database
2025-08-21 11:32:22,472 - __streamlit_app__ - INFO - Nouvelle session créée: 66645868-e1f1-48cb-999f-20aa3898e2d4
2025-08-21 11:32:22,473 - __streamlit_app__ - INFO - User question: De quoi parle la vidéo ?
2025-08-21 11:32:22,474 - __streamlit_app__ - INFO - Searching for relevant chunks for: De quoi parle la vidéo ?
2025-08-21 11:32:22,476 - __streamlit_app__ - ERROR - Error generating response: retrieve_relevant_chunks() got an unexpected keyword argument 'embedding_model_name'
2025-08-21 11:32:22,476 - __mongo__ - INFO - Mise à jour de la conversation 66645868-e1f1-48cb-999f-20aa3898e2d4 avec 2 nouveaux messages
2025-08-21 11:32:22,593 - __mongo__ - INFO - Conversation 66645868-e1f1-48cb-999f-20aa3898e2d4 mise à jour avec succès
2025-08-21 11:32:22,594 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:32:40,946 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:32:40,968 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:32:40,975 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:32:40,975 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:32:40,976 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoI in Qdrant...
2025-08-21 11:32:41,456 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:32:41,462 - __streamlit_app__ - INFO - Video s3F1a1yUQoI already exists in the database
2025-08-21 11:32:41,465 - __streamlit_app__ - INFO - User question: Quoi ?
2025-08-21 11:32:41,467 - __streamlit_app__ - INFO - Searching for relevant chunks for: Quoi ?
2025-08-21 11:32:41,469 - __streamlit_app__ - ERROR - Error generating response: retrieve_relevant_chunks() got an unexpected keyword argument 'embedding_model_name'
2025-08-21 11:32:41,469 - __mongo__ - INFO - Mise à jour de la conversation 66645868-e1f1-48cb-999f-20aa3898e2d4 avec 2 nouveaux messages
2025-08-21 11:32:41,581 - __mongo__ - INFO - Conversation 66645868-e1f1-48cb-999f-20aa3898e2d4 mise à jour avec succès
2025-08-21 11:32:41,582 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:36:26,723 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:36:26,747 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:36:26,765 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:36:26,765 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:36:26,767 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoI in Qdrant...
2025-08-21 11:36:27,226 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:36:27,234 - __streamlit_app__ - INFO - Video s3F1a1yUQoI already exists in the database
2025-08-21 11:36:27,247 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:36:34,460 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:36:34,471 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:36:34,482 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:36:34,483 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:36:34,483 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoI in Qdrant...
2025-08-21 11:36:34,908 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:36:34,913 - __streamlit_app__ - INFO - Video s3F1a1yUQoI already exists in the database
2025-08-21 11:36:34,926 - __streamlit_app__ - INFO - User question: De quoi parle la vidéo ?
2025-08-21 11:36:34,929 - __streamlit_app__ - INFO - Searching for relevant chunks for: De quoi parle la vidéo ?
2025-08-21 11:36:34,929 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-21 11:36:34,930 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 11:36:53,026 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 11:36:53,027 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 11:36:59,732 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 11:37:01,780 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:37:02,166 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:37:02,172 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:37:02,172 - __retrieve__ - INFO - Application du filtre pour la vidéo : s3F1a1yUQoI
2025-08-21 11:37:02,174 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 11:37:02,174 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 11:37:02,418 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 400 Bad Request"
2025-08-21 11:37:02,430 - __streamlit_app__ - ERROR - Error generating response: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Bad request: Index required but not found for \\"embedding_model\\" of one of the following types: [keyword]. Help: Create an index for this key or use a different filter."},"time ...'
2025-08-21 11:37:02,434 - __mongo__ - INFO - Mise à jour de la conversation 66645868-e1f1-48cb-999f-20aa3898e2d4 avec 2 nouveaux messages
2025-08-21 11:37:02,550 - __mongo__ - INFO - Conversation 66645868-e1f1-48cb-999f-20aa3898e2d4 mise à jour avec succès
2025-08-21 11:37:02,557 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:37:46,982 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:37:47,000 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:37:47,019 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:37:47,020 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:37:47,020 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoI in Qdrant...
2025-08-21 11:37:47,479 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:37:47,485 - __streamlit_app__ - INFO - Video s3F1a1yUQoI already exists in the database
2025-08-21 11:37:47,496 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:37:51,380 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:37:51,381 - __mongo__ - INFO - Connexion à MongoDB: mongodb+srv://reporting:ChNNKat9xpZpPOYg@cluster0.z4sob.mongodb.net/
2025-08-21 11:37:53,769 - __mongo__ - INFO - Connexion MongoDB établie avec succès
2025-08-21 11:37:53,894 - __streamlit_app__ - INFO - ConversationManager initialisé
2025-08-21 11:37:53,900 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:37:53,913 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:38:00,474 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:38:00,484 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:38:00,492 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:38:00,493 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:38:00,493 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoI in Qdrant...
2025-08-21 11:38:00,912 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:38:00,916 - __streamlit_app__ - INFO - Video s3F1a1yUQoI already exists in the database
2025-08-21 11:38:00,917 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:38:05,241 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:38:05,249 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:38:05,261 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:38:05,261 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:38:05,262 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoI in Qdrant...
2025-08-21 11:38:05,391 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:38:05,401 - __streamlit_app__ - INFO - Video s3F1a1yUQoI already exists in the database
2025-08-21 11:38:05,404 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:38:13,856 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:38:13,864 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:38:13,872 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:38:13,873 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:38:13,874 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoI in Qdrant...
2025-08-21 11:38:14,370 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:38:14,372 - __streamlit_app__ - INFO - Video s3F1a1yUQoI already exists in the database
2025-08-21 11:38:14,374 - __streamlit_app__ - INFO - Nouvelle session créée: 1f3ea89f-c2bd-4a26-929f-4e345d379cd9
2025-08-21 11:38:14,374 - __streamlit_app__ - INFO - User question: De quoi parle la vidéo ?
2025-08-21 11:38:14,377 - __streamlit_app__ - INFO - Searching for relevant chunks for: De quoi parle la vidéo ?
2025-08-21 11:38:14,377 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-21 11:38:14,377 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 11:38:14,391 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 11:38:14,391 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 11:38:21,196 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 11:38:21,900 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:38:22,277 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:38:22,280 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:38:22,281 - __retrieve__ - INFO - Application du filtre pour la vidéo : s3F1a1yUQoI
2025-08-21 11:38:22,282 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 11:38:22,282 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 11:38:22,537 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 400 Bad Request"
2025-08-21 11:38:22,542 - __streamlit_app__ - ERROR - Error generating response: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Bad request: Index required but not found for \\"embedding_model\\" of one of the following types: [keyword]. Help: Create an index for this key or use a different filter."},"time ...'
2025-08-21 11:38:22,545 - __mongo__ - INFO - Mise à jour de la conversation 1f3ea89f-c2bd-4a26-929f-4e345d379cd9 avec 2 nouveaux messages
2025-08-21 11:38:22,662 - __mongo__ - INFO - Conversation 1f3ea89f-c2bd-4a26-929f-4e345d379cd9 mise à jour avec succès
2025-08-21 11:38:22,664 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:43:20,388 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:43:20,415 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:43:20,435 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:43:20,436 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:43:20,437 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoI in Qdrant...
2025-08-21 11:43:20,908 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:43:20,921 - __streamlit_app__ - INFO - Video s3F1a1yUQoI already exists in the database
2025-08-21 11:43:20,927 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:43:26,822 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:43:26,828 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:43:26,836 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:43:26,836 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:43:26,838 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoI in Qdrant...
2025-08-21 11:43:27,251 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:43:27,259 - __streamlit_app__ - INFO - Video s3F1a1yUQoI already exists in the database
2025-08-21 11:43:27,264 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:43:30,442 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:43:30,451 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:43:30,463 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoIhttps://youtu.be/s3F1a1yUQoI
2025-08-21 11:43:30,463 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoIhttps://youtu.be/s3F1a1yUQoI
2025-08-21 11:43:30,464 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoIhttps://youtu.be/s3F1a1yUQoI in Qdrant...
2025-08-21 11:43:30,599 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:43:30,602 - __streamlit_app__ - INFO - Video s3F1a1yUQoIhttps://youtu.be/s3F1a1yUQoI not found, starting ingestion...
2025-08-21 11:43:30,603 - __streamlit_app__ - INFO - Fetching transcript for s3F1a1yUQoIhttps://youtu.be/s3F1a1yUQoI
2025-08-21 11:43:33,302 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:43:33,305 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:43:33,316 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:43:33,316 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:43:33,317 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoI in Qdrant...
2025-08-21 11:43:33,449 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:43:33,451 - __streamlit_app__ - INFO - Video s3F1a1yUQoI already exists in the database
2025-08-21 11:43:33,456 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:43:39,915 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:43:39,926 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:43:39,935 - __streamlit_app__ - INFO - Processing YouTube URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:43:39,935 - __youtube__ - INFO - Extracting video ID from URL: https://youtu.be/s3F1a1yUQoI
2025-08-21 11:43:39,936 - __streamlit_app__ - INFO - Checking existence of video s3F1a1yUQoI in Qdrant...
2025-08-21 11:43:40,330 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:43:40,332 - __streamlit_app__ - INFO - Video s3F1a1yUQoI already exists in the database
2025-08-21 11:43:40,336 - __streamlit_app__ - INFO - User question: De quoi parle la vidéo ?
2025-08-21 11:43:40,340 - __streamlit_app__ - INFO - Searching for relevant chunks for: De quoi parle la vidéo ?
2025-08-21 11:43:40,340 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-21 11:43:40,341 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 11:43:40,349 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 11:43:40,350 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 11:43:53,770 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 11:43:55,635 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:43:56,047 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:43:56,061 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:43:56,061 - __retrieve__ - INFO - Application du filtre pour la vidéo : s3F1a1yUQoI
2025-08-21 11:43:56,073 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 11:43:56,076 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 11:43:56,354 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 400 Bad Request"
2025-08-21 11:43:56,375 - __streamlit_app__ - ERROR - Error generating response: Unexpected Response: 400 (Bad Request)
Raw response content:
b'{"status":{"error":"Bad request: Index required but not found for \\"embedding_model\\" of one of the following types: [keyword]. Help: Create an index for this key or use a different filter."},"time ...'
2025-08-21 11:43:56,380 - __mongo__ - INFO - Mise à jour de la conversation 1f3ea89f-c2bd-4a26-929f-4e345d379cd9 avec 2 nouveaux messages
2025-08-21 11:43:56,498 - __mongo__ - INFO - Conversation 1f3ea89f-c2bd-4a26-929f-4e345d379cd9 mise à jour avec succès
2025-08-21 11:43:56,500 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:44:31,550 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:44:31,554 - __mongo__ - INFO - Connexion à MongoDB: mongodb+srv://reporting:ChNNKat9xpZpPOYg@cluster0.z4sob.mongodb.net/
2025-08-21 11:44:34,516 - __mongo__ - INFO - Connexion MongoDB établie avec succès
2025-08-21 11:44:35,741 - __streamlit_app__ - INFO - ConversationManager initialisé
2025-08-21 11:44:36,018 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:44:36,061 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:44:42,457 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:44:42,458 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:44:42,461 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:44:42,461 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:44:42,461 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:44:42,884 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:44:42,890 - __streamlit_app__ - INFO - Video r0WIJo4GA20 not found, starting ingestion...
2025-08-21 11:44:42,892 - __streamlit_app__ - INFO - Fetching transcript for r0WIJo4GA20
2025-08-21 11:44:45,611 - __streamlit_app__ - INFO - Transcript fetched in language 'en'
2025-08-21 11:44:45,611 - __streamlit_app__ - INFO - Transcript retrieved (1490 segments)
2025-08-21 11:44:45,614 - __streamlit_app__ - INFO - Saving transcript for r0WIJo4GA20
2025-08-21 11:44:45,616 - __youtube__ - INFO - Saving TXT to r0WIJo4GA20.txt
2025-08-21 11:44:45,619 - __youtube__ - INFO - Saved TXT to ../downloads/r0WIJo4GA20.txt
2025-08-21 11:44:45,619 - __streamlit_app__ - INFO - Transcript saved to ./downloads/r0WIJo4GA20.txt
2025-08-21 11:44:45,621 - __streamlit_app__ - INFO - Processing and storing r0WIJo4GA20 in Qdrant using model sentence-transformers/all-mpnet-base-v2
2025-08-21 11:44:45,623 - __streamlit_app__ - ERROR - Error processing video r0WIJo4GA20: process_and_store_transcript_txt() got an unexpected keyword argument 'embedding_model_name'
2025-08-21 11:44:45,625 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:45:48,026 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:45:48,192 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:45:48,267 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:45:48,267 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:45:48,276 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:45:49,917 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:45:49,981 - __streamlit_app__ - INFO - Video r0WIJo4GA20 not found, starting ingestion...
2025-08-21 11:45:49,987 - __streamlit_app__ - INFO - Fetching transcript for r0WIJo4GA20
2025-08-21 11:45:51,675 - __streamlit_app__ - INFO - Transcript fetched in language 'en'
2025-08-21 11:45:51,675 - __streamlit_app__ - INFO - Transcript retrieved (1490 segments)
2025-08-21 11:45:51,677 - __streamlit_app__ - INFO - Saving transcript for r0WIJo4GA20
2025-08-21 11:45:51,677 - __youtube__ - INFO - Saving TXT to r0WIJo4GA20.txt
2025-08-21 11:45:51,678 - __youtube__ - INFO - Saved TXT to ../downloads/r0WIJo4GA20.txt
2025-08-21 11:45:51,678 - __streamlit_app__ - INFO - Transcript saved to ./downloads/r0WIJo4GA20.txt
2025-08-21 11:45:51,680 - __streamlit_app__ - INFO - Processing and storing r0WIJo4GA20 in Qdrant using model sentence-transformers/all-mpnet-base-v2
2025-08-21 11:45:51,680 - __embedding__ - INFO - Starting processing for TXT file: ./downloads/r0WIJo4GA20.txt
2025-08-21 11:45:51,685 - __embedding__ - INFO - Loaded text from ./downloads/r0WIJo4GA20.txt, length: 55114 chars
2025-08-21 11:45:51,686 - __embedding__ - INFO - Splitting text into chunks (size=700, overlap=100)
2025-08-21 11:45:51,821 - __embedding__ - INFO - Text split into 91 chunks
2025-08-21 11:45:51,821 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 11:45:52,007 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 11:45:52,007 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 11:46:04,682 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 11:46:04,686 - __embedding__ - INFO - Embedding 91 text chunks
2025-08-21 11:46:10,056 - __embedding__ - INFO - Embedded 91 text chunks
2025-08-21 11:46:10,584 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:46:10,960 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:46:11,012 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:46:11,143 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:46:11,144 - __qdrant__ - INFO - Collection 'youtube_transcripts' already exists.
2025-08-21 11:46:11,144 - __qdrant__ - INFO - Creating index on payload field 'video_id'
2025-08-21 11:46:11,492 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/index?wait=true "HTTP/1.1 200 OK"
2025-08-21 11:46:11,861 - __qdrant__ - INFO - Creating index on payload field 'embedding_model'
2025-08-21 11:46:12,104 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/index?wait=true "HTTP/1.1 200 OK"
2025-08-21 11:46:12,105 - __qdrant__ - INFO - Upserting 91 points into collection 'youtube_transcripts'
2025-08-21 11:46:19,078 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points?wait=true "HTTP/1.1 200 OK"
2025-08-21 11:46:19,092 - __qdrant__ - INFO - Successfully upserted points into collection 'youtube_transcripts'
2025-08-21 11:46:19,092 - __embedding__ - INFO - Finished processing and storing 91 chunks from ./downloads/r0WIJo4GA20.txt
2025-08-21 11:46:19,672 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:46:19,680 - __streamlit_app__ - INFO - Video r0WIJo4GA20 confirmed in Qdrant
2025-08-21 11:46:19,784 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:46:26,332 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:46:26,361 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:46:26,378 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:46:26,378 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:46:26,379 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:46:27,031 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:46:27,059 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:46:27,060 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:46:34,972 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:46:34,986 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:46:34,991 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:46:34,991 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:46:34,992 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:46:35,423 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:46:35,428 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:46:35,430 - __streamlit_app__ - INFO - Nouvelle session créée: ed86db26-059f-40cd-ba30-653bb6b4cc43
2025-08-21 11:46:35,430 - __streamlit_app__ - INFO - User question: De quoi parle la vidéo ?
2025-08-21 11:46:35,432 - __streamlit_app__ - INFO - Searching for relevant chunks for: De quoi parle la vidéo ?
2025-08-21 11:46:35,433 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-21 11:46:35,433 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 11:46:35,442 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 11:46:35,442 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 11:46:48,943 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 11:46:50,026 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:46:50,412 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:46:50,417 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:46:50,417 - __retrieve__ - INFO - Application du filtre pour la vidéo : r0WIJo4GA20
2025-08-21 11:46:50,418 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 11:46:50,419 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 11:46:50,667 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 11:46:50,698 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-21 11:46:50,699 - __streamlit_app__ - INFO - Found 0 relevant chunks
2025-08-21 11:46:50,709 - __streamlit_app__ - INFO - No relevant chunks found for the query
2025-08-21 11:46:51,050 - __mongo__ - INFO - Mise à jour de la conversation ed86db26-059f-40cd-ba30-653bb6b4cc43 avec 2 nouveaux messages
2025-08-21 11:46:51,172 - __mongo__ - INFO - Conversation ed86db26-059f-40cd-ba30-653bb6b4cc43 mise à jour avec succès
2025-08-21 11:46:51,177 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:50:37,964 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:50:38,004 - __mongo__ - INFO - Connexion à MongoDB: mongodb+srv://reporting:ChNNKat9xpZpPOYg@cluster0.z4sob.mongodb.net/
2025-08-21 11:50:40,573 - __mongo__ - INFO - Connexion MongoDB établie avec succès
2025-08-21 11:50:40,694 - __streamlit_app__ - INFO - ConversationManager initialisé
2025-08-21 11:50:40,790 - __streamlit_app__ - INFO - Initialisation du client Qdrant...
2025-08-21 11:50:41,546 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:50:41,929 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:50:41,933 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:50:41,934 - __streamlit_app__ - INFO - Client Qdrant initialisé
2025-08-21 11:50:41,937 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:50:41,947 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:50:44,209 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:50:44,222 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:50:44,232 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:50:44,233 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:50:44,233 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:50:44,368 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:50:44,372 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:50:44,374 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:50:47,790 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:50:47,799 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:50:47,815 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:50:47,816 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:50:47,816 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:50:47,947 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:50:47,949 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:50:47,951 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:50:54,682 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:50:54,686 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:50:54,696 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:50:54,696 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:50:54,697 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:50:55,088 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:50:55,090 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:50:55,092 - __streamlit_app__ - INFO - Nouvelle session créée: 1187e9d8-eb2e-475f-9d8e-1ab52113af6e
2025-08-21 11:50:55,092 - __streamlit_app__ - INFO - User question: De quoi parle la vidéo ?
2025-08-21 11:50:55,095 - __streamlit_app__ - INFO - Searching for relevant chunks for: De quoi parle la vidéo ?
2025-08-21 11:50:55,095 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-21 11:50:55,095 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 11:51:02,350 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 11:51:02,351 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 11:51:07,518 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 11:51:09,242 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:51:09,638 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:51:09,641 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:51:09,641 - __retrieve__ - INFO - Application du filtre pour la vidéo : r0WIJo4GA20
2025-08-21 11:51:09,642 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 11:51:09,643 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 11:51:09,896 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 11:51:09,903 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-21 11:51:09,904 - __streamlit_app__ - INFO - Found 0 relevant chunks
2025-08-21 11:51:09,911 - __streamlit_app__ - INFO - No relevant chunks found for the query
2025-08-21 11:51:10,250 - __mongo__ - INFO - Mise à jour de la conversation 1187e9d8-eb2e-475f-9d8e-1ab52113af6e avec 2 nouveaux messages
2025-08-21 11:51:10,361 - __mongo__ - INFO - Conversation 1187e9d8-eb2e-475f-9d8e-1ab52113af6e mise à jour avec succès
2025-08-21 11:51:10,362 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:53:21,885 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:53:21,921 - __mongo__ - INFO - Connexion à MongoDB: mongodb+srv://cz9bfytrr:WOBB5yiaSfUK5MS4@ride-share-project.66bv9jl.mongodb.net/naive-rag?retryWrites=true&w=majority
2025-08-21 11:53:24,457 - __mongo__ - INFO - Connexion MongoDB établie avec succès
2025-08-21 11:53:24,600 - __streamlit_app__ - INFO - ConversationManager initialisé
2025-08-21 11:53:24,702 - __streamlit_app__ - INFO - Initialisation du client Qdrant...
2025-08-21 11:53:25,125 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:53:25,502 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:53:25,507 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:53:25,507 - __streamlit_app__ - INFO - Client Qdrant initialisé
2025-08-21 11:53:25,510 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:53:25,518 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:53:27,221 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:53:27,225 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:53:27,231 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:53:27,232 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:53:27,234 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:53:27,368 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:53:27,373 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:53:27,375 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:53:30,601 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:53:30,606 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:53:30,625 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:53:30,625 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:53:30,625 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:53:30,756 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:53:30,758 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:53:30,760 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:53:36,992 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:53:37,002 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:53:37,016 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:53:37,017 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:53:37,017 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:53:37,415 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:53:37,417 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:53:37,418 - __streamlit_app__ - INFO - Nouvelle session créée: a2c172a9-8992-4f7f-b4ae-51f172227a3d
2025-08-21 11:53:37,418 - __streamlit_app__ - INFO - User question: De quoi parle la vidéo ?
2025-08-21 11:53:37,421 - __streamlit_app__ - INFO - Searching for relevant chunks for: De quoi parle la vidéo ?
2025-08-21 11:53:37,421 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-21 11:53:37,421 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 11:53:45,361 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 11:53:45,361 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 11:53:51,205 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 11:53:52,536 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:53:52,916 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:53:52,920 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:53:52,920 - __retrieve__ - INFO - Application du filtre pour la vidéo : r0WIJo4GA20
2025-08-21 11:53:52,921 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 11:53:52,922 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 11:53:53,175 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 11:53:53,180 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-21 11:53:53,183 - __streamlit_app__ - INFO - Found 0 relevant chunks
2025-08-21 11:53:53,188 - __streamlit_app__ - INFO - No relevant chunks found for the query
2025-08-21 11:53:53,529 - __mongo__ - INFO - Mise à jour de la conversation a2c172a9-8992-4f7f-b4ae-51f172227a3d avec 2 nouveaux messages
2025-08-21 11:53:53,643 - __mongo__ - INFO - Conversation a2c172a9-8992-4f7f-b4ae-51f172227a3d mise à jour avec succès
2025-08-21 11:53:53,644 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:55:11,053 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:55:11,073 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:55:11,085 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:55:11,085 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:55:11,085 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:55:11,509 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:55:11,516 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:55:11,520 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:55:15,984 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:55:16,010 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:55:16,018 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:55:16,018 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:55:16,019 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:55:16,176 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:55:16,179 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:55:16,181 - __streamlit_app__ - INFO - User question: De quoi parle la vidéo ?
2025-08-21 11:55:16,182 - __streamlit_app__ - INFO - Searching for relevant chunks for: De quoi parle la vidéo ?
2025-08-21 11:55:16,182 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-21 11:55:16,182 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 11:55:16,185 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 11:55:16,186 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 11:55:23,280 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 11:55:24,147 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:55:24,525 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:55:24,531 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:55:24,531 - __retrieve__ - INFO - Application du filtre pour la vidéo : r0WIJo4GA20
2025-08-21 11:55:24,533 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 11:55:24,533 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 11:55:24,775 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 11:55:24,777 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-21 11:55:24,778 - __streamlit_app__ - INFO - Found 0 relevant chunks
2025-08-21 11:55:24,781 - __streamlit_app__ - INFO - No relevant chunks found for the query
2025-08-21 11:55:25,118 - __mongo__ - INFO - Mise à jour de la conversation a2c172a9-8992-4f7f-b4ae-51f172227a3d avec 2 nouveaux messages
2025-08-21 11:55:25,233 - __mongo__ - INFO - Conversation a2c172a9-8992-4f7f-b4ae-51f172227a3d mise à jour avec succès
2025-08-21 11:55:25,234 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:56:14,099 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:56:14,128 - __mongo__ - INFO - Connexion à MongoDB: mongodb+srv://cz9bfytrr:WOBB5yiaSfUK5MS4@ride-share-project.66bv9jl.mongodb.net/naive-rag?retryWrites=true&w=majority
2025-08-21 11:56:17,136 - __mongo__ - INFO - Connexion MongoDB établie avec succès
2025-08-21 11:56:17,280 - __streamlit_app__ - INFO - ConversationManager initialisé
2025-08-21 11:56:17,378 - __streamlit_app__ - INFO - Initialisation du client Qdrant...
2025-08-21 11:56:17,795 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:56:18,192 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:56:18,197 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:56:18,197 - __streamlit_app__ - INFO - Client Qdrant initialisé
2025-08-21 11:56:18,201 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:56:18,212 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:56:20,110 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:56:20,113 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:56:20,124 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:56:20,125 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:56:20,125 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:56:20,267 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:56:20,270 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:56:20,273 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:56:29,730 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:56:29,734 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:56:29,740 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:56:29,740 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:56:29,741 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:56:30,130 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:56:30,132 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:56:30,133 - __streamlit_app__ - INFO - Nouvelle session créée: f976468d-dce8-467d-a39d-21cd634b6038
2025-08-21 11:56:30,133 - __streamlit_app__ - INFO - User question: De quoi parle la vidéo ?
2025-08-21 11:56:30,136 - __streamlit_app__ - INFO - Searching for relevant chunks for: De quoi parle la vidéo ?
2025-08-21 11:56:30,136 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-21 11:56:30,136 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 11:56:36,828 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 11:56:36,828 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 11:56:42,426 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 11:56:43,699 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:56:44,081 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:56:44,085 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:56:44,085 - __retrieve__ - INFO - Application du filtre pour la vidéo : r0WIJo4GA20
2025-08-21 11:56:44,086 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 11:56:44,087 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 11:56:44,345 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 11:56:44,352 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-21 11:56:44,354 - __streamlit_app__ - INFO - Found 0 relevant chunks
2025-08-21 11:56:44,357 - __streamlit_app__ - INFO - No relevant chunks found for the query
2025-08-21 11:56:44,700 - __mongo__ - INFO - Mise à jour de la conversation f976468d-dce8-467d-a39d-21cd634b6038 avec 2 nouveaux messages
2025-08-21 11:56:44,811 - __mongo__ - INFO - Conversation f976468d-dce8-467d-a39d-21cd634b6038 mise à jour avec succès
2025-08-21 11:56:44,813 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:57:41,933 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:57:41,965 - __mongo__ - INFO - Connexion à MongoDB: mongodb+srv://cz9bfytrr:WOBB5yiaSfUK5MS4@ride-share-project.66bv9jl.mongodb.net/naive-rag?retryWrites=true&w=majority
2025-08-21 11:57:44,584 - __mongo__ - INFO - Connexion MongoDB établie avec succès
2025-08-21 11:57:44,711 - __streamlit_app__ - INFO - ConversationManager initialisé
2025-08-21 11:57:44,821 - __streamlit_app__ - INFO - Initialisation du client Qdrant...
2025-08-21 11:57:45,244 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:57:45,646 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:57:45,651 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:57:45,651 - __streamlit_app__ - INFO - Client Qdrant initialisé
2025-08-21 11:57:45,654 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:57:45,661 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:57:50,166 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:57:50,175 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:57:50,196 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:57:50,196 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:57:50,196 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:57:50,333 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:57:50,341 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:57:50,342 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:57:56,885 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:57:56,904 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:57:56,917 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:57:56,918 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:57:56,920 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:57:57,320 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:57:57,322 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:57:57,324 - __streamlit_app__ - INFO - Nouvelle session créée: cc3b693f-6398-4bea-ba6b-f9225d089d45
2025-08-21 11:57:57,324 - __streamlit_app__ - INFO - User question: De quoi parle la vidéo ?
2025-08-21 11:57:57,327 - __streamlit_app__ - INFO - Searching for relevant chunks for: De quoi parle la vidéo ?
2025-08-21 11:57:57,327 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-21 11:57:57,328 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 11:58:04,367 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 11:58:04,368 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 11:58:09,923 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 11:58:11,055 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:58:11,469 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:58:11,472 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:58:11,472 - __retrieve__ - INFO - Application du filtre pour la vidéo : r0WIJo4GA20
2025-08-21 11:58:11,473 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 11:58:11,474 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 11:58:11,725 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 11:58:11,743 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-21 11:58:11,744 - __streamlit_app__ - INFO - Found 0 relevant chunks
2025-08-21 11:58:11,748 - __streamlit_app__ - INFO - No relevant chunks found for the query
2025-08-21 11:58:12,077 - __mongo__ - INFO - Mise à jour de la conversation cc3b693f-6398-4bea-ba6b-f9225d089d45 avec 2 nouveaux messages
2025-08-21 11:58:12,193 - __mongo__ - INFO - Conversation cc3b693f-6398-4bea-ba6b-f9225d089d45 mise à jour avec succès
2025-08-21 11:58:12,194 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:59:15,101 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:59:15,140 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:59:15,144 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:59:15,144 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:59:15,144 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:59:15,613 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:59:15,620 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:59:15,624 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 11:59:23,470 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 11:59:23,480 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 11:59:23,492 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:59:23,492 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 11:59:23,493 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 11:59:23,891 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 11:59:23,892 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 11:59:23,895 - __streamlit_app__ - INFO - User question: De quoi parle la vidéo ?
2025-08-21 11:59:23,898 - __streamlit_app__ - INFO - Searching for relevant chunks for: De quoi parle la vidéo ?
2025-08-21 11:59:23,899 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-21 11:59:23,899 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 11:59:23,903 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 11:59:23,904 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 11:59:30,140 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 11:59:30,856 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 11:59:31,243 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 11:59:31,256 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 11:59:31,259 - __retrieve__ - INFO - Application du filtre pour la vidéo : r0WIJo4GA20
2025-08-21 11:59:31,259 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 11:59:31,260 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 11:59:31,500 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 11:59:31,501 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-21 11:59:31,504 - __streamlit_app__ - INFO - Found 0 relevant chunks
2025-08-21 11:59:31,512 - __streamlit_app__ - INFO - No relevant chunks found for the query
2025-08-21 11:59:31,860 - __mongo__ - INFO - Mise à jour de la conversation cc3b693f-6398-4bea-ba6b-f9225d089d45 avec 2 nouveaux messages
2025-08-21 11:59:31,973 - __mongo__ - INFO - Conversation cc3b693f-6398-4bea-ba6b-f9225d089d45 mise à jour avec succès
2025-08-21 11:59:31,975 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:00:25,789 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:00:25,818 - __mongo__ - INFO - Connexion à MongoDB: mongodb+srv://cz9bfytrr:WOBB5yiaSfUK5MS4@ride-share-project.66bv9jl.mongodb.net/naive-rag?retryWrites=true&w=majority
2025-08-21 12:00:28,966 - __mongo__ - INFO - Connexion MongoDB établie avec succès
2025-08-21 12:00:29,113 - __streamlit_app__ - INFO - ConversationManager initialisé
2025-08-21 12:00:29,227 - __streamlit_app__ - INFO - Initialisation du client Qdrant...
2025-08-21 12:00:29,647 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 12:00:30,035 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:00:30,038 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 12:00:30,038 - __streamlit_app__ - INFO - Client Qdrant initialisé
2025-08-21 12:00:30,040 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:00:30,048 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:00:36,436 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:00:36,440 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:00:36,451 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:00:36,452 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:00:36,453 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 12:00:36,873 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:00:36,884 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 12:00:36,886 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:00:42,609 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:00:42,620 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:00:42,636 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:00:42,636 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:00:42,637 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 12:00:43,019 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:00:43,021 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 12:00:43,026 - __streamlit_app__ - INFO - Nouvelle session créée: 213d525b-eb70-4234-af5a-48166b931d56
2025-08-21 12:00:43,026 - __streamlit_app__ - INFO - User question: De quoi parle la vidéo ?
2025-08-21 12:00:43,029 - __streamlit_app__ - INFO - Searching for relevant chunks for: De quoi parle la vidéo ?
2025-08-21 12:00:43,030 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-21 12:00:43,030 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 12:00:50,264 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 12:00:50,265 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 12:00:56,119 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 12:00:57,603 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 12:00:58,019 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:00:58,031 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 12:00:58,032 - __retrieve__ - INFO - Application du filtre pour la vidéo : r0WIJo4GA20
2025-08-21 12:00:58,037 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 12:00:58,039 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 12:00:58,325 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 12:00:58,344 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-21 12:00:58,360 - __streamlit_app__ - INFO - Found 0 relevant chunks
2025-08-21 12:00:58,374 - __streamlit_app__ - INFO - No relevant chunks found for the query
2025-08-21 12:00:58,722 - __mongo__ - INFO - Mise à jour de la conversation 213d525b-eb70-4234-af5a-48166b931d56 avec 2 nouveaux messages
2025-08-21 12:00:58,841 - __mongo__ - INFO - Conversation 213d525b-eb70-4234-af5a-48166b931d56 mise à jour avec succès
2025-08-21 12:00:58,846 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:03:58,419 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:03:58,434 - __mongo__ - INFO - Connexion à MongoDB: mongodb+srv://cz9bfytrr:WOBB5yiaSfUK5MS4@ride-share-project.66bv9jl.mongodb.net/naive-rag?retryWrites=true&w=majority
2025-08-21 12:04:00,844 - __mongo__ - INFO - Connexion MongoDB établie avec succès
2025-08-21 12:04:00,967 - __streamlit_app__ - INFO - ConversationManager initialisé
2025-08-21 12:04:00,978 - __streamlit_app__ - INFO - Initialisation du client Qdrant...
2025-08-21 12:04:01,672 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 12:04:02,067 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:04:02,071 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 12:04:02,071 - __streamlit_app__ - INFO - Client Qdrant initialisé
2025-08-21 12:04:02,075 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:04:02,086 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:04:15,455 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:04:15,484 - __mongo__ - INFO - Connexion à MongoDB: mongodb+srv://cz9bfytrr:WOBB5yiaSfUK5MS4@ride-share-project.66bv9jl.mongodb.net
2025-08-21 12:04:16,804 - __mongo__ - INFO - Connexion MongoDB établie avec succès
2025-08-21 12:04:16,920 - __streamlit_app__ - INFO - ConversationManager initialisé
2025-08-21 12:04:17,047 - __streamlit_app__ - INFO - Initialisation du client Qdrant...
2025-08-21 12:04:17,498 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 12:04:17,894 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:04:17,898 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 12:04:17,898 - __streamlit_app__ - INFO - Client Qdrant initialisé
2025-08-21 12:04:17,901 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:04:17,912 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:04:24,206 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:04:24,211 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:04:24,229 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:04:24,229 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:04:24,230 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 12:04:24,658 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:04:24,665 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 12:04:24,668 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:04:28,723 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:04:28,729 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:04:28,739 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:04:28,739 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:04:28,740 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 12:04:28,880 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:04:28,882 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 12:04:28,884 - __streamlit_app__ - INFO - Nouvelle session créée: 62fd0ad7-1af4-452c-bdf0-72fe432fbfd2
2025-08-21 12:04:28,885 - __streamlit_app__ - INFO - User question: test
2025-08-21 12:04:28,887 - __streamlit_app__ - INFO - Searching for relevant chunks for: test
2025-08-21 12:04:28,887 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'test'
2025-08-21 12:04:28,887 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 12:04:35,912 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 12:04:35,912 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 12:04:41,705 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 12:04:44,769 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 12:04:45,153 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:04:45,157 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 12:04:45,157 - __retrieve__ - INFO - Application du filtre pour la vidéo : r0WIJo4GA20
2025-08-21 12:04:45,157 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 12:04:45,157 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 12:04:45,418 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 12:04:45,426 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-21 12:04:45,428 - __streamlit_app__ - INFO - Found 0 relevant chunks
2025-08-21 12:04:45,433 - __streamlit_app__ - INFO - No relevant chunks found for the query
2025-08-21 12:04:45,773 - __mongo__ - INFO - Mise à jour de la conversation 62fd0ad7-1af4-452c-bdf0-72fe432fbfd2 avec 2 nouveaux messages
2025-08-21 12:04:45,896 - __mongo__ - INFO - Conversation 62fd0ad7-1af4-452c-bdf0-72fe432fbfd2 mise à jour avec succès
2025-08-21 12:04:45,898 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:10:10,819 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:10:10,850 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:10:10,889 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:10:10,889 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:10:10,890 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 12:10:11,357 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:10:11,815 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 12:10:11,824 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:10:15,089 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:10:15,096 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:10:15,103 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:10:15,104 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:10:15,104 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 12:10:15,248 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:10:15,250 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 12:10:15,252 - __streamlit_app__ - INFO - User question: Test
2025-08-21 12:10:15,254 - __streamlit_app__ - INFO - Searching for relevant chunks for: Test
2025-08-21 12:10:15,255 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'Test'
2025-08-21 12:10:15,255 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 12:10:15,265 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 12:10:15,265 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 12:10:22,319 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 12:10:22,980 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 12:10:23,364 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:10:23,366 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 12:10:23,366 - __retrieve__ - INFO - Application du filtre pour la vidéo : r0WIJo4GA20
2025-08-21 12:10:23,367 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 12:10:23,367 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 12:10:23,611 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 12:10:23,612 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-21 12:10:23,614 - __streamlit_app__ - INFO - Found 0 relevant chunks
2025-08-21 12:10:23,618 - __streamlit_app__ - INFO - No relevant chunks found for the query
2025-08-21 12:10:23,958 - __mongo__ - INFO - Mise à jour de la conversation 62fd0ad7-1af4-452c-bdf0-72fe432fbfd2 avec 2 nouveaux messages
2025-08-21 12:10:24,074 - __mongo__ - INFO - Conversation 62fd0ad7-1af4-452c-bdf0-72fe432fbfd2 mise à jour avec succès
2025-08-21 12:10:24,076 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:11:33,424 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:11:33,457 - __mongo__ - INFO - Connexion à MongoDB: mongodb+srv://cz9bfytrr:WOBB5yiaSfUK5MS4@ride-share-project.66bv9jl.mongodb.net
2025-08-21 12:11:35,968 - __mongo__ - INFO - Connexion MongoDB établie avec succès
2025-08-21 12:11:36,098 - __streamlit_app__ - INFO - ConversationManager initialisé
2025-08-21 12:11:36,206 - __streamlit_app__ - INFO - Initialisation du client Qdrant...
2025-08-21 12:11:36,615 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 12:11:36,995 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:11:36,999 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 12:11:36,999 - __streamlit_app__ - INFO - Client Qdrant initialisé
2025-08-21 12:11:37,001 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:11:37,008 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:11:43,022 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:11:43,034 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:11:43,061 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:11:43,061 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:11:43,062 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 12:11:43,446 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:11:43,456 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 12:11:43,458 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:11:48,391 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:11:48,400 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:11:48,406 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:11:48,406 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:11:48,407 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 12:11:48,550 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:11:48,552 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 12:11:48,553 - __streamlit_app__ - INFO - Nouvelle session créée: 60c0cb4f-2563-47dc-a4f3-eed7f5f7e04f
2025-08-21 12:11:48,553 - __streamlit_app__ - INFO - User question: Test
2025-08-21 12:11:48,555 - __streamlit_app__ - INFO - Searching for relevant chunks for: Test
2025-08-21 12:11:48,556 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'Test'
2025-08-21 12:11:48,556 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 12:11:55,191 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 12:11:55,191 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 12:12:00,292 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 12:12:01,507 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 12:12:01,893 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:12:01,899 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 12:12:01,899 - __retrieve__ - INFO - Application du filtre pour la vidéo : r0WIJo4GA20
2025-08-21 12:12:01,901 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 12:12:01,901 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 12:12:02,154 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 12:12:02,163 - __retrieve__ - INFO - Retrieved 0 relevant chunks.
2025-08-21 12:12:02,165 - __streamlit_app__ - INFO - Found 0 relevant chunks
2025-08-21 12:12:02,173 - __streamlit_app__ - INFO - No relevant chunks found for the query
2025-08-21 12:12:02,519 - __mongo__ - INFO - Mise à jour de la conversation 60c0cb4f-2563-47dc-a4f3-eed7f5f7e04f avec 2 nouveaux messages
2025-08-21 12:12:02,638 - __mongo__ - INFO - Conversation 60c0cb4f-2563-47dc-a4f3-eed7f5f7e04f mise à jour avec succès
2025-08-21 12:12:02,639 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:16:01,805 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:16:01,830 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:16:01,839 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:16:01,839 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=r0WIJo4GA20
2025-08-21 12:16:01,839 - __streamlit_app__ - INFO - Checking existence of video r0WIJo4GA20 in Qdrant...
2025-08-21 12:16:02,316 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:16:02,330 - __streamlit_app__ - INFO - Video r0WIJo4GA20 already exists in the database
2025-08-21 12:16:02,335 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:16:17,012 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:16:17,023 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:16:17,029 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:16:17,030 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:16:17,030 - __streamlit_app__ - INFO - Checking existence of video VGphODdrtKU in Qdrant...
2025-08-21 12:16:17,455 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:16:17,460 - __streamlit_app__ - INFO - Video VGphODdrtKU not found, starting ingestion...
2025-08-21 12:16:17,462 - __streamlit_app__ - INFO - Fetching transcript for VGphODdrtKU
2025-08-21 12:16:19,128 - __streamlit_app__ - INFO - Transcript fetched in language 'en'
2025-08-21 12:16:19,128 - __streamlit_app__ - INFO - Transcript retrieved (603 segments)
2025-08-21 12:16:19,130 - __streamlit_app__ - INFO - Saving transcript for VGphODdrtKU
2025-08-21 12:16:19,130 - __youtube__ - INFO - Saving TXT to VGphODdrtKU.txt
2025-08-21 12:16:19,131 - __youtube__ - INFO - Saved TXT to ../downloads/VGphODdrtKU.txt
2025-08-21 12:16:19,131 - __streamlit_app__ - INFO - Transcript saved to ./downloads/VGphODdrtKU.txt
2025-08-21 12:16:19,133 - __streamlit_app__ - INFO - Processing and storing VGphODdrtKU in Qdrant using model sentence-transformers/all-mpnet-base-v2
2025-08-21 12:16:19,133 - __embedding__ - INFO - Starting processing for TXT file: ./downloads/VGphODdrtKU.txt
2025-08-21 12:16:19,135 - __embedding__ - INFO - Loaded text from ./downloads/VGphODdrtKU.txt, length: 21337 chars
2025-08-21 12:16:19,135 - __embedding__ - INFO - Splitting text into chunks (size=700, overlap=100)
2025-08-21 12:16:19,141 - __embedding__ - INFO - Text split into 36 chunks
2025-08-21 12:16:19,141 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 12:16:19,151 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 12:16:19,152 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 12:16:25,743 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 12:16:25,744 - __embedding__ - INFO - Embedding 36 text chunks
2025-08-21 12:16:27,706 - __embedding__ - INFO - Embedded 36 text chunks
2025-08-21 12:16:28,139 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 12:16:28,522 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:16:28,525 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 12:16:28,655 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:16:28,656 - __qdrant__ - INFO - Collection 'youtube_transcripts' already exists.
2025-08-21 12:16:28,656 - __qdrant__ - INFO - Creating index on payload field 'video_id'
2025-08-21 12:16:28,821 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/index?wait=true "HTTP/1.1 200 OK"
2025-08-21 12:16:28,829 - __qdrant__ - INFO - Creating index on payload field 'embedding_model'
2025-08-21 12:16:28,992 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/index?wait=true "HTTP/1.1 200 OK"
2025-08-21 12:16:28,992 - __qdrant__ - INFO - Upserting 36 points into collection 'youtube_transcripts'
2025-08-21 12:16:29,795 - httpx - INFO - HTTP Request: PUT https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points?wait=true "HTTP/1.1 200 OK"
2025-08-21 12:16:29,796 - __qdrant__ - INFO - Successfully upserted points into collection 'youtube_transcripts'
2025-08-21 12:16:29,797 - __embedding__ - INFO - Finished processing and storing 36 chunks from ./downloads/VGphODdrtKU.txt
2025-08-21 12:16:30,193 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:16:30,193 - __streamlit_app__ - INFO - Video VGphODdrtKU confirmed in Qdrant
2025-08-21 12:16:30,198 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:16:38,083 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:16:38,091 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:16:38,097 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:16:38,098 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:16:38,098 - __streamlit_app__ - INFO - Checking existence of video VGphODdrtKU in Qdrant...
2025-08-21 12:16:38,496 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:16:38,500 - __streamlit_app__ - INFO - Video VGphODdrtKU already exists in the database
2025-08-21 12:16:38,503 - __streamlit_app__ - INFO - Conversation reset requested
2025-08-21 12:16:38,503 - __mongo__ - INFO - Sauvegarde de la conversation a34cbd4e-7f79-47e4-9cd4-fc36d51f5d7c pour la vidéo VGphODdrtKU
2025-08-21 12:16:38,625 - __mongo__ - INFO - Conversation a34cbd4e-7f79-47e4-9cd4-fc36d51f5d7c sauvegardée avec succès
2025-08-21 12:16:38,625 - __streamlit_app__ - INFO - Conversation terminée sauvegardée avec ID: a34cbd4e-7f79-47e4-9cd4-fc36d51f5d7c
2025-08-21 12:16:38,626 - __streamlit_app__ - INFO - Nouvelle session créée après réinitialisation: 1bdd3529-99b1-4e00-a9ce-b196d62e0335
2025-08-21 12:16:38,839 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:16:38,839 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:16:38,841 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:16:38,842 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:16:38,842 - __streamlit_app__ - INFO - Checking existence of video VGphODdrtKU in Qdrant...
2025-08-21 12:16:38,995 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:16:38,996 - __streamlit_app__ - INFO - Video VGphODdrtKU already exists in the database
2025-08-21 12:16:38,997 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:16:47,896 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:16:47,905 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:16:47,912 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:16:47,912 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:16:47,913 - __streamlit_app__ - INFO - Checking existence of video VGphODdrtKU in Qdrant...
2025-08-21 12:16:48,317 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:16:48,321 - __streamlit_app__ - INFO - Video VGphODdrtKU already exists in the database
2025-08-21 12:16:48,323 - __streamlit_app__ - INFO - User question: De quoi parle la vidéo ?
2025-08-21 12:16:48,326 - __streamlit_app__ - INFO - Searching for relevant chunks for: De quoi parle la vidéo ?
2025-08-21 12:16:48,327 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-21 12:16:48,327 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 12:16:48,335 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 12:16:48,335 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 12:16:54,114 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 12:16:55,049 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 12:16:55,443 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:16:55,446 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 12:16:55,446 - __retrieve__ - INFO - Application du filtre pour la vidéo : VGphODdrtKU
2025-08-21 12:16:55,447 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 12:16:55,447 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 12:16:55,703 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 12:16:55,713 - __retrieve__ - INFO - Retrieved 10 relevant chunks.
2025-08-21 12:16:55,715 - __streamlit_app__ - INFO - Found 10 relevant chunks
2025-08-21 12:16:55,724 - __streamlit_app__ - INFO - Generating response with model openai/gpt-oss-120b
2025-08-21 12:16:55,725 - __query__ - INFO - Construction du prompt pour la question: 'De quoi parle la vidéo ?'
2025-08-21 12:16:55,726 - __query__ - INFO - Appel à Grok pour générer la réponse...
2025-08-21 12:16:55,728 - __grok__ - INFO - Generating answer with Groq model 'openai/gpt-oss-120b'
2025-08-21 12:16:55,740 - __grok__ - INFO - Groq client created
2025-08-21 12:16:58,624 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 12:16:58,647 - __grok__ - INFO - Answer generated successfully.
2025-08-21 12:16:58,647 - __query__ - INFO - Réponse générée avec succès.
2025-08-21 12:16:58,647 - __streamlit_app__ - INFO - Response generated successfully
2025-08-21 12:17:07,631 - __mongo__ - INFO - Mise à jour de la conversation 1bdd3529-99b1-4e00-a9ce-b196d62e0335 avec 2 nouveaux messages
2025-08-21 12:17:07,746 - __mongo__ - INFO - Conversation 1bdd3529-99b1-4e00-a9ce-b196d62e0335 mise à jour avec succès
2025-08-21 12:17:07,748 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:17:56,465 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:17:56,483 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:17:56,487 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:17:56,487 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:17:56,487 - __streamlit_app__ - INFO - Checking existence of video VGphODdrtKU in Qdrant...
2025-08-21 12:17:56,925 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:17:56,930 - __streamlit_app__ - INFO - Video VGphODdrtKU already exists in the database
2025-08-21 12:17:56,934 - __streamlit_app__ - INFO - User question: D'accord
2025-08-21 12:17:56,935 - __streamlit_app__ - INFO - Searching for relevant chunks for: D'accord
2025-08-21 12:17:56,936 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'D'accord'
2025-08-21 12:17:56,936 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 12:17:56,949 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 12:17:56,949 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 12:18:03,300 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 12:18:04,148 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 12:18:04,526 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:18:04,532 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 12:18:04,532 - __retrieve__ - INFO - Application du filtre pour la vidéo : VGphODdrtKU
2025-08-21 12:18:04,532 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 12:18:04,533 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 12:18:05,037 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 12:18:05,041 - __retrieve__ - INFO - Retrieved 10 relevant chunks.
2025-08-21 12:18:05,042 - __streamlit_app__ - INFO - Found 10 relevant chunks
2025-08-21 12:18:05,048 - __streamlit_app__ - INFO - Generating response with model openai/gpt-oss-120b
2025-08-21 12:18:05,049 - __query__ - INFO - Construction du prompt pour la question: 'D'accord'
2025-08-21 12:18:05,050 - __query__ - INFO - Appel à Grok pour générer la réponse...
2025-08-21 12:18:05,051 - __grok__ - INFO - Generating answer with Groq model 'openai/gpt-oss-120b'
2025-08-21 12:18:05,077 - __grok__ - INFO - Groq client created
2025-08-21 12:18:06,215 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 12:18:06,223 - __grok__ - INFO - Answer generated successfully.
2025-08-21 12:18:06,223 - __query__ - INFO - Réponse générée avec succès.
2025-08-21 12:18:06,223 - __streamlit_app__ - INFO - Response generated successfully
2025-08-21 12:18:07,270 - __mongo__ - INFO - Mise à jour de la conversation 1bdd3529-99b1-4e00-a9ce-b196d62e0335 avec 2 nouveaux messages
2025-08-21 12:18:07,382 - __mongo__ - INFO - Conversation 1bdd3529-99b1-4e00-a9ce-b196d62e0335 mise à jour avec succès
2025-08-21 12:18:07,386 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:18:55,862 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:18:55,875 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:18:55,884 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:18:55,884 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:18:55,885 - __streamlit_app__ - INFO - Checking existence of video VGphODdrtKU in Qdrant...
2025-08-21 12:18:56,300 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:18:56,306 - __streamlit_app__ - INFO - Video VGphODdrtKU already exists in the database
2025-08-21 12:18:56,311 - __streamlit_app__ - INFO - User question: test
2025-08-21 12:18:56,314 - __streamlit_app__ - INFO - Searching for relevant chunks for: test
2025-08-21 12:18:56,314 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'test'
2025-08-21 12:18:56,314 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 12:18:56,319 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 12:18:56,320 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 12:19:02,531 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 12:19:03,347 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 12:19:03,743 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:19:03,750 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 12:19:03,750 - __retrieve__ - INFO - Application du filtre pour la vidéo : VGphODdrtKU
2025-08-21 12:19:03,752 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 12:19:03,753 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 12:19:04,014 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 12:19:04,030 - __retrieve__ - INFO - Retrieved 10 relevant chunks.
2025-08-21 12:19:04,031 - __streamlit_app__ - INFO - Found 10 relevant chunks
2025-08-21 12:19:04,042 - __streamlit_app__ - INFO - Generating response with model openai/gpt-oss-120b
2025-08-21 12:19:04,043 - __query__ - INFO - Construction du prompt pour la question: 'test'
2025-08-21 12:19:04,044 - __query__ - INFO - Appel à Grok pour générer la réponse...
2025-08-21 12:19:04,044 - __grok__ - INFO - Generating answer with Groq model 'openai/gpt-oss-120b'
2025-08-21 12:19:04,052 - __grok__ - INFO - Groq client created
2025-08-21 12:19:05,144 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 12:19:05,149 - __grok__ - INFO - Answer generated successfully.
2025-08-21 12:19:05,150 - __query__ - INFO - Réponse générée avec succès.
2025-08-21 12:19:05,150 - __streamlit_app__ - INFO - Response generated successfully
2025-08-21 12:19:06,792 - __mongo__ - INFO - Mise à jour de la conversation 1bdd3529-99b1-4e00-a9ce-b196d62e0335 avec 2 nouveaux messages
2025-08-21 12:19:06,908 - __mongo__ - INFO - Conversation 1bdd3529-99b1-4e00-a9ce-b196d62e0335 mise à jour avec succès
2025-08-21 12:19:06,909 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:19:49,343 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:19:49,385 - __mongo__ - INFO - Connexion à MongoDB: mongodb+srv://cz9bfytrr:WOBB5yiaSfUK5MS4@ride-share-project.66bv9jl.mongodb.net
2025-08-21 12:19:51,999 - __mongo__ - INFO - Connexion MongoDB établie avec succès
2025-08-21 12:19:52,120 - __streamlit_app__ - INFO - ConversationManager initialisé
2025-08-21 12:19:52,231 - __streamlit_app__ - INFO - Initialisation du client Qdrant...
2025-08-21 12:19:52,644 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 12:19:53,043 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:19:53,046 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 12:19:53,046 - __streamlit_app__ - INFO - Client Qdrant initialisé
2025-08-21 12:19:53,048 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:19:53,054 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:19:56,839 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:19:56,842 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:19:56,847 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:19:56,848 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:19:56,850 - __streamlit_app__ - INFO - Checking existence of video VGphODdrtKU in Qdrant...
2025-08-21 12:19:56,990 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:19:56,995 - __streamlit_app__ - INFO - Video VGphODdrtKU already exists in the database
2025-08-21 12:19:56,998 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:19:59,508 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:19:59,510 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:19:59,517 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:19:59,518 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:19:59,518 - __streamlit_app__ - INFO - Checking existence of video VGphODdrtKU in Qdrant...
2025-08-21 12:19:59,648 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:19:59,651 - __streamlit_app__ - INFO - Video VGphODdrtKU already exists in the database
2025-08-21 12:19:59,652 - __streamlit_app__ - INFO - End of Streamlit application render
2025-08-21 12:20:06,188 - __streamlit_app__ - INFO - Démarrage de l'application Streamlit
2025-08-21 12:20:06,192 - __streamlit_app__ - INFO - Clients Qdrant et YouTubeTranscriptApi initialisés avec succès
2025-08-21 12:20:06,201 - __streamlit_app__ - INFO - Processing YouTube URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:20:06,201 - __youtube__ - INFO - Extracting video ID from URL: https://www.youtube.com/watch?v=VGphODdrtKU
2025-08-21 12:20:06,202 - __streamlit_app__ - INFO - Checking existence of video VGphODdrtKU in Qdrant...
2025-08-21 12:20:06,598 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/count "HTTP/1.1 200 OK"
2025-08-21 12:20:06,601 - __streamlit_app__ - INFO - Video VGphODdrtKU already exists in the database
2025-08-21 12:20:06,604 - __streamlit_app__ - INFO - Nouvelle session créée: 41c3a490-622b-4119-ac1e-5e4c3b05efd9
2025-08-21 12:20:06,604 - __streamlit_app__ - INFO - User question: De quoi parle la vidéo ?
2025-08-21 12:20:06,607 - __streamlit_app__ - INFO - Searching for relevant chunks for: De quoi parle la vidéo ?
2025-08-21 12:20:06,607 - __retrieve__ - INFO - Recherche de chunks pertinents pour la requête : 'De quoi parle la vidéo ?'
2025-08-21 12:20:06,607 - __embedding__ - INFO - Loading model sentence-transformers/all-mpnet-base-v2
2025-08-21 12:20:12,626 - sentence_transformers.SentenceTransformer - INFO - Use pytorch device_name: mps
2025-08-21 12:20:12,626 - sentence_transformers.SentenceTransformer - INFO - Load pretrained SentenceTransformer: sentence-transformers/all-mpnet-base-v2
2025-08-21 12:20:17,860 - __embedding__ - INFO - Model sentence-transformers/all-mpnet-base-v2 loaded
2025-08-21 12:20:19,246 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333 "HTTP/1.1 200 OK"
2025-08-21 12:20:19,637 - httpx - INFO - HTTP Request: GET https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections "HTTP/1.1 200 OK"
2025-08-21 12:20:19,640 - __qdrant__ - INFO - Connected to Qdrant. Collections: collections=[CollectionDescription(name='midjourney'), CollectionDescription(name='youtube_transcripts'), CollectionDescription(name='star_charts')]
2025-08-21 12:20:19,640 - __retrieve__ - INFO - Application du filtre pour la vidéo : VGphODdrtKU
2025-08-21 12:20:19,641 - __retrieve__ - INFO - Application du filtre pour le modèle d'embedding : sentence-transformers/all-mpnet-base-v2
2025-08-21 12:20:19,641 - __retrieve__ - INFO - Lancement de la recherche dans la collection 'youtube_transcripts'
2025-08-21 12:20:19,896 - httpx - INFO - HTTP Request: POST https://8944ab11-ce5f-4e99-9520-02d24272ba30.europe-west3-0.gcp.cloud.qdrant.io:6333/collections/youtube_transcripts/points/search "HTTP/1.1 200 OK"
2025-08-21 12:20:19,904 - __retrieve__ - INFO - Retrieved 10 relevant chunks.
2025-08-21 12:20:19,906 - __streamlit_app__ - INFO - Found 10 relevant chunks
2025-08-21 12:20:19,920 - __streamlit_app__ - INFO - Generating response with model openai/gpt-oss-20b
2025-08-21 12:20:19,920 - __query__ - INFO - Construction du prompt pour la question: 'De quoi parle la vidéo ?'
2025-08-21 12:20:19,921 - __query__ - INFO - Appel à Grok pour générer la réponse...
2025-08-21 12:20:19,921 - __grok__ - INFO - Generating answer with Groq model 'openai/gpt-oss-20b'
2025-08-21 12:20:19,936 - __grok__ - INFO - Groq client created
2025-08-21 12:20:21,412 - httpx - INFO - HTTP Request: POST https://api.groq.com/openai/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-21 12:20:21,433 - __grok__ - INFO - Answer generated successfully.
2025-08-21 12:20:21,433 - __query__ - INFO - Réponse générée avec succès.
2025-08-21 12:20:21,434 - __streamlit_app__ - INFO - Response generated successfully
2025-08-21 12:20:28,164 - __mongo__ - INFO - Mise à jour de la conversation 41c3a490-622b-4119-ac1e-5e4c3b05efd9 avec 2 nouveaux messages
2025-08-21 12:20:28,165 - __mongo__ - INFO - Nouveaux messages: [{'role': 'user', 'content': 'De quoi parle la vidéo ?'}, {'role': 'assistant', 'content': '**Introduction**  \nLa vidéo est un guide de préparation aux entretiens techniques pour les postes de développeur ou d’ingénieur logiciel. Le créateur partage ses propres expériences d’entretiens (Google, Amazon, etc.) et donne des conseils pratiques sur la façon de se préparer, de maximiser les chances grâce aux références et d’utiliser des ressources en ligne.\n\n**Points principaux abordés**\n\n| Thème | Détails issus du transcript |\n|-------|-----------------------------|\n| **Références (referrals)** | L’importance de “level up on the referral” pour passer directement à un entretien sans file d’attente. Il recommande d’appliquer à des postes publiés dans les 48\u202fh pour éviter la concurrence. |\n| **Types d’entretiens** | 3 catégories : <br>•\u202fComportementaux (behavioral)<br>•\u202fTechniques (coding) <br>•\u202fConception de systèmes (system design) |\n| **Ressources de préparation** | •\u202fYouTube (ex. Node.io, chaînes dédiées à la résolution de problèmes)<br>•\u202fAlgoExpert.io pour les DS/algos<br>•\u202fLeetCode.io (particulièrement les problèmes récents de Google, Amazon, etc.) |\n| **Anecdotes personnelles** | •\u202fInterviewur qui a interrompu l’entretien pour livrer un colis.<br>•\u202fRéussite de l’entretien “Word Search 2” après avoir regardé la vidéo correspondante.<br>•\u202fÉchec d’un entretien et suivi par un autre recruteur Amazon. |\n| **Stratégie de préparation** | Combiner visionnage de vidéos (pas de surcharge de problèmes) et pratique via des mock interviews avec des amis. |\n| **Mention de Pua** | Pua, une grande YouTuber tech, est invitée à la vidéo. Le créateur encourage les spectateurs à visiter sa chaîne. |\n\n**Conclusion**  \nLa vidéo est donc un tutoriel complet pour les candidats tech qui souhaitent optimiser leurs chances d’obtenir un poste (Google, Amazon, etc.) en comprenant les différentes étapes d’un entretien, en utilisant efficacement les références et en se préparant avec les bonnes ressources.**Introduction** La vidéo est un guide de préparation aux entretiens techniques pour les postes de développeur ou d’ingénieur logiciel. Le créateur partage ses propres expériences d’entretiens (Google, Amazon, etc.) et donne des conseils pratiques sur la façon de se préparer, de maximiser les chances grâce aux références et d’utiliser des ressources en ligne. **Points principaux abordés** | Thème | Détails issus du transcript | |-------|-----------------------------| | **Références (referrals)** | L’importance de “level up on the referral” pour passer directement à un entretien sans file d’attente. Il recommande d’appliquer à des postes publiés dans les 48 h pour éviter la concurrence. | | **Types d’entretiens** | 3 catégories : <br>• Comportementaux (behavioral)<br>• Techniques (coding) <br>• Conception de systèmes (system design) | | **Ressources de préparation** | • YouTube (ex. Node.io, chaînes dédiées à la résolution de problèmes)<br>• AlgoExpert.io pour les DS/algos<br>• LeetCode.io (particulièrement les problèmes récents de Google, Amazon, etc.) | | **Anecdotes personnelles** | • Interviewur qui a interrompu l’entretien pour livrer un colis.<br>• Réussite de l’entretien “Word Search 2” après avoir regardé la vidéo correspondante.<br>• Échec d’un entretien et suivi par un autre recruteur Amazon. | | **Stratégie de préparation** | Combiner visionnage de vidéos (pas de surcharge de problèmes) et pratique via des mock interviews avec des amis. | | **Mention de Pua** | Pua, une grande YouTuber tech, est invitée à la vidéo. Le créateur encourage les spectateurs à visiter sa chaîne. | **Conclusion** La vidéo est donc un tutoriel complet pour les candidats tech qui souhaitent optimiser leurs chances d’obtenir un poste (Google, Amazon, etc.) en comprenant les différentes étapes d’un entretien, en utilisant efficacement les références et en se préparant avec les bonnes ressources. '}]
2025-08-21 12:20:28,279 - __mongo__ - INFO - Conversation 41c3a490-622b-4119-ac1e-5e4c3b05efd9 mise à jour avec succès
2025-08-21 12:20:28,281 - __streamlit_app__ - INFO - End of Streamlit application render
